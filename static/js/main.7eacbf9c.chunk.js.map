{"version":3,"sources":["actions/song_actions.js","utils/song_utils.js","actions/user_playlist_actions.js","utils/user_playlist_utils.js","actions/search_bar_actions.js","utils/search_bar_utils.js","reducers/songs_reducer.js","reducers/artists_reducer.js","reducers/albums_reducer.js","reducers/user_playlists_reducer.js","reducers/search_results_reducer.js","reducers/entities_reducer.js","actions/audio_player_actions.js","utils/audio_player_utils.js","actions/session_actions.js","utils/session_utils.js","reducers/audio_player_reducer.js","reducers/user_reducer.js","reducers/session_reducer.js","reducers/session_errors_reducer.js","reducers/errors_reducer.js","reducers/root_reducer.js","store/store.js","selectors/session_selectors.js","utils/route_utils.jsx","components/root_page/root_page.jsx","components/root_page/root_page_container.js","components/nav/nav_bar.jsx","selectors/song_selectors.js","components/search_index/search_index_item.jsx","components/search_index/search_bar.jsx","components/search_index/search_bar_container.js","components/search_index/search_index.jsx","components/search_index/search_index_container.js","components/song_index/song_index_item.jsx","components/song_index/song_index.jsx","components/song_index/song_index_container.js","components/user_playlist/user_playlist_item.jsx","components/user_playlist/user_playlist_index.jsx","components/user_playlist/user_playlist_index_container.js","selectors/audio_player_selectors.js","components/audio_player/event_handlers/seek_slider.js","components/audio_player/event_handlers/play_pause_button.js","components/audio_player/event_handlers/volume_slider.js","components/audio_player/event_handlers/shuffle_loop_button.js","components/audio_player/event_handlers/event_handlers.js","components/audio_player/audio_player_components/audio.jsx","components/audio_player/audio_player_components/spinning_disc.jsx","components/audio_player/audio_player_components/marquee.jsx","components/audio_player/audio_player_components/play_pause_button.jsx","components/audio_player/audio_player_components/forward_button.jsx","components/audio_player/audio_player_components/shuffle_button.jsx","components/audio_player/audio_player_components/backward_button.jsx","components/audio_player/audio_player_components/seek_slider.jsx","components/audio_player/audio_player_components/volume_slider.jsx","components/audio_player/audio_player_components/loop_button.jsx","components/audio_player/audio_player.jsx","components/audio_player/audio_player_container.js","components/playlist_index/soundwave.jsx","components/playlist_index/playlist_index_item.jsx","components/playlist_form/playlist_form.jsx","components/playlist_form/playlist_form_container.js","selectors/playlist_selectors.js","components/playlist_index/playlist_index.jsx","components/playlist_index/playlist_index_container.js","components/session_form/session_form.jsx","components/session_form/login_form_container.js","components/session_form/signup_form_container.js","components/app.jsx","components/error_handler.jsx","components/root.jsx","index.jsx"],"names":["fetchSomeSongs","offSet","arguments","length","undefined","dispatch","axios","get","concat","songApiUtil","then","payload","type","receiveSongs","receiveUserPlaylist","fetchUserPlaylists","userId","request","url","method","headers","X-CSRF-Token","sessionStorage","getItem","withCredentials","userPlaylistApiUtil","receiveUserPlaylists","createPlaylist","playlistData","data","editPlaylist","playlistId","fetchQueryData","query","fetchDataByQuery","receiveQueryData","initialState","2","id","title","artistId","albumId","songsReducer","state","action","Object","objectSpread","songs","7","name","avatarUrl","artistsReducer","artists","12","coverImageUrl","albumsReducer","albums","userPlaylistsReducer","playlists","newState","songIds","searchResultsReducer","searchResults","entitiesReducer","combineReducers","userPlaylists","userClickPlay","songId","getPlayedSongIndices","playedSongIndices","playingSongIndex","newPlayedSongIndices","toConsumableArray","includes","receiveCurrentUser","currentUser","receiveSessionErrors","errors","processServerRes","res","user","username","setItem","csrfToken","login","userData","catch","err","response","signup","prevSongIndex","currentPlaylist","audioPlayerReducer","newPlayingSongIndex","forwardLogic","newPrevSongIndex","backwardLogic","nextSongIndex","history","nextSongIndices","map","_","index","filter","Math","floor","random","slicedToArray","shuffleLogic","newSongIds","slice","indexOf","removeSongIndex","removeSongLogic","parseInt","keys","userReducer","sessionReducer","audioPlayer","sessionErrorsReducer","errorsReducer","session","rootReducer","entities","configureStore","preloadedState","createStore","applyMiddleware","thunk","logger","isLoggedIn","_ref","Boolean","mapStateToProps","loggedIn","AuthRoute","withRouter","connect","Component","component","path","exact","react_default","a","createElement","Route","render","props","Redirect","to","ProtectedRoute","_ref2","rest","objectWithoutProperties","assign","RootPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasFetchedPlaylist","_this$props","setState","nextProps","Fragment","React","defaultProps","activeStyle","textDecoration","backgroundColor","NavBar","handleLogout","bind","assertThisInitialized","logout","window","location","hash","NavLink","className","onClick","removeItem","getSongInfo","song","artist","album","artistAvatar","coverImage","getSongsInfo","values","getPlaylistSongsInfo","getPlayingSongId","_ref3","SearchIndexItem","SearchBar","handleChange","handleSubmit","debounceSearch","debounce","e","preventDefault","flush","target","value","clearSearchResults","clear","onSubmit","placeholder","onChange","SearchBarContainer","SearchIndex","handlePlay","forward","_this2","search_bar_container","key","role","search_index_item","SearchIndexContainer","_ref$entities","SongIndexItem","_this$props2","src","alt","SongIndex","handleScroll","_e$target","scrollHeight","scrollTop","clientHeight","onScroll","song_index_item","SongIndexContainer","UserPlaylistItem","UserPlaylistIndex","play","playlist","user_playlist_item","UserPlaylistContainer","reverse","startPlaylist","isEndOfLoop","convertTime","time","minutes","seconds","getTotalAudioTime","duration","audioRef","current","totalAudioTime","updateCurrentAudioTime","seekValue","_this$audioRef$curren","currentTime","currentAudioTime","handleSeek","seekTime","isPlaying","handlePause","playAudio","pauseAudio","pause","handleVolume","newVolume","volume","handleMute","preMuteVolume","handleUnmute","updateVolume","toggleShuffle","isOnShuffle","toggleLoop","isOnLoop","event_handlers","seekSliderHandlers","playPauseHandlers","volumeHandlers","shuffleLoopHandlers","Audio","shuffle","ref","onLoadedMetadata","onDurationChange","onTimeUpdate","onVolumeChange","onPause","onPlay","onEnded","setTimeout","SpinningDisc","Marquee","PlayPauseButton","ForwardButton","ShuffleButton","BackwardButton","backward","SeekSlider","min","max","step","VolumeSlider","volumeButton","LoopButton","AudioPlayer","createRef","eventHandlers","_this$state","audio","spinning_disc","marquee","backward_button","play_pause_button","forward_button","shuffle_button","loop_button","volume_slider","seek_slider","AudioPlayerContainer","_session$audioPlayer","currentSong","getCurrentSongInfo","SoundWave","PlaylistIndexItem","handleRemoveSong","soundwave","PlaylistForm","newName","playlistName","handleNew","handleEdit","user_id","song_ids","makePlaylistData","_this$props3","PlaylistFormContainer","getPlaylistName","PlaylistFrom","PlaylistIndex","handleChangeSong","changeSong","stopPropagation","removeSong","playingSongId","playlist_form_container","playlist_index_item","PlaylistIndexContainer","SessionForm","password","clearSessionErrors","field","defineProperty","processForm","formType","_this$state2","update","error","i","Link","LoginFormContainer","SignupFormContainer","nav_bar","ErrorHandler","hasError","children","Root","store","react_redux_es","HashRouter","error_handler","app","document","addEventListener","root","getElementById","ReactDOM","components_root"],"mappings":"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","file":"static/js/main.7eacbf9c.chunk.js","sourcesContent":["import * as songApiUtil from '../utils/song_utils';\n\nexport const RECEIVE_SONGS = 'RECEIVE_SONGS';\n\nexport const receiveSongs = payload => ({\n  type: RECEIVE_SONGS,\n  payload,\n});\n\nexport const fetchSomeSongs = (offSet = 0) => dispatch => songApiUtil.fetchSomeSongs(offSet)\n  .then(payload => dispatch(receiveSongs(payload)));\n","import axios from 'axios';\n\nexport const fetchSomeSongs = (offSet = 0) => (\n  axios.get(\n    `https://zing-lite-rails-api.herokuapp.com/api/songs/?off_set=${offSet}`,\n  )\n);\n\nexport const justToGoAroundLinter = () => (\n  'This does absolutely nothing'\n);\n","import * as userPlaylistApiUtil from '../utils/user_playlist_utils';\n\nexport const RECEIVE_USER_PLAYLISTS = 'RECEIVE_USER_PLAYLISTS';\nexport const RECEIVE_USER_PLAYLIST = 'RECEIVE_USER_PLAYLIST';\nexport const REMOVE_USER_PLAYLIST = 'REMOVE_USER_PLAYLIST';\n\nexport const receiveUserPlaylists = payload => ({\n  type: RECEIVE_USER_PLAYLISTS,\n  payload,\n});\n\nexport const receiveUserPlaylist = payload => ({\n  type: RECEIVE_USER_PLAYLIST,\n  payload,\n});\n\nexport const removeUserPlaylist = playlistId => ({\n  type: REMOVE_USER_PLAYLIST,\n  playlistId,\n});\n\nexport const fetchUserPlaylists = userId => dispatch => (\n  userPlaylistApiUtil.fetchUserPlaylists(userId)\n    .then(payload => dispatch(receiveUserPlaylists(payload)))\n);\n\nexport const createPlaylist = playlistData => dispatch => (\n  userPlaylistApiUtil.createPlaylist(playlistData)\n    .then(payload => dispatch(receiveUserPlaylist(payload)))\n);\n\nexport const editPlaylist = (playlistId, playlistData) => dispatch => (\n  userPlaylistApiUtil.editPlaylist(playlistId, playlistData)\n    .then(payload => dispatch(receiveUserPlaylist(payload)))\n);\n\nexport const deleteUserPlaylist = playlistId => dispatch => (\n  userPlaylistApiUtil.deletePlaylist(playlistId)\n    .then(deletedPlaylistId => dispatch(removeUserPlaylist(deletedPlaylistId)))\n);\n","import axios from 'axios';\n\nexport const currentDate = () => new Date().toLocaleString();\n\nexport const fetchUserPlaylists = userId => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/playlists/?user_id=${userId}`,\n    method: 'get',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    withCredentials: true,\n  })\n);\n\nexport const createPlaylist = playlistData => (\n  axios.request({\n    url: 'https://zing-lite-rails-api.herokuapp.com/api/playlists',\n    method: 'post',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    data: playlistData,\n    withCredentials: true,\n  })\n);\n\nexport const editPlaylist = (playlistId, playlistData) => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/playlists/${playlistId}`,\n    method: 'patch',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    data: playlistData,\n    withCredentials: true,\n  })\n);\n\nexport const deletePlaylist = playlistId => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/playlists/${playlistId}`,\n    method: 'delete',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    withCredentials: true,\n  })\n);\n","import { fetchDataByQuery } from '../utils/search_bar_utils';\n\nexport const RECEIVE_QUERY_DATA = 'RECEIVE_QUERY_DATA';\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\n\nexport const clearSearchResults = () => ({\n  type: CLEAR_SEARCH_RESULTS,\n});\n\nexport const receiveQueryData = payload => ({\n  type: RECEIVE_QUERY_DATA,\n  payload,\n});\n\nexport const fetchQueryData = query => dispatch => fetchDataByQuery(query)\n  .then(payload => dispatch(receiveQueryData(payload)));\n","import axios from 'axios';\n\nexport const nothing = () => (\n  'this does absolutely nothing'\n);\n\nexport const fetchDataByQuery = query => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/searches/?query=${query}`,\n    method: 'get',\n  })\n);\n","import { RECEIVE_SONGS } from '../actions/song_actions';\nimport { RECEIVE_USER_PLAYLISTS } from '../actions/user_playlist_actions';\nimport { RECEIVE_QUERY_DATA } from '../actions/search_bar_actions';\n\nconst initialState = {\n  2: {\n    id: 2,\n    title: 'Ha Trang',\n    url: 'https://www.dropbox.com/s/ezijh6nzgutwah9/HaTrang.mp3?dl=1',\n    artistId: 7,\n    albumId: 12,\n  },\n};\n\nconst songsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        ...action.payload.data.songs,\n      };\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.songs,\n      };\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        ...action.payload.data.songs,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default songsReducer;\n","import { RECEIVE_SONGS } from '../actions/song_actions';\nimport { RECEIVE_USER_PLAYLISTS } from '../actions/user_playlist_actions';\nimport { RECEIVE_QUERY_DATA } from '../actions/search_bar_actions';\n\nconst initialState = {\n  7: {\n    id: 7,\n    name: 'Quang Dung',\n    avatarUrl: 'https://www.dropbox.com/s/vcb2rfo9ohzzd62/QuangDung.jpg?dl=1',\n  },\n};\n\nconst artistsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        ...action.payload.data.artists,\n      };\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.artists,\n      };\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        ...action.payload.data.artists,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default artistsReducer;\n","import { RECEIVE_SONGS } from '../actions/song_actions';\nimport { RECEIVE_USER_PLAYLISTS } from '../actions/user_playlist_actions';\nimport { RECEIVE_QUERY_DATA } from '../actions/search_bar_actions';\n\nconst initialState = {\n  12: {\n    id: 12,\n    name: 'Goi Giac Mo Xua',\n    coverImageUrl: 'https://www.dropbox.com/s/8qz1syuymksj5kt/GoiGiacMoXua.jpg?dl=1',\n  },\n};\n\nconst albumsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        ...action.payload.data.albums,\n      };\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.albums,\n      };\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        ...action.payload.data.albums,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default albumsReducer;\n","import {\n  RECEIVE_USER_PLAYLISTS,\n  REMOVE_USER_PLAYLIST,\n  RECEIVE_USER_PLAYLIST,\n} from '../actions/user_playlist_actions';\n\nconst userPlaylistsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.playlists,\n      };\n    case RECEIVE_USER_PLAYLIST:\n      return {\n        ...state,\n        ...action.payload.data,\n      };\n    case REMOVE_USER_PLAYLIST: {\n      const newState = { ...state };\n      delete newState[action.playlistId];\n\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userPlaylistsReducer;\n","import { RECEIVE_QUERY_DATA, CLEAR_SEARCH_RESULTS } from '../actions/search_bar_actions';\n\nconst initialState = {\n  songIds: [],\n};\n\nconst searchResultsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        songIds: action.payload.data.searchResults.songIds,\n      };\n    case CLEAR_SEARCH_RESULTS:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default searchResultsReducer;\n","import { combineReducers } from 'redux';\n\nimport songsReducer from './songs_reducer';\nimport artistsReducer from './artists_reducer';\nimport albumsReducer from './albums_reducer';\nimport userPlaylistsReducer from './user_playlists_reducer';\nimport searchResultsReducer from './search_results_reducer';\n\nconst entitiesReducer = combineReducers({\n  songs: songsReducer,\n  artists: artistsReducer,\n  albums: albumsReducer,\n  userPlaylists: userPlaylistsReducer,\n  searchResults: searchResultsReducer,\n});\n\nexport default entitiesReducer;\n","export const FORWARD = 'FORWARD';\nexport const BACKWARD = 'BACKWARD';\nexport const SHUFFLE = 'SHUFFLE';\nexport const START_PLAYLIST = 'START_PLAYLIST';\nexport const USER_CLICK_PLAY = 'USER_CLICK_PLAY';\nexport const CHANGE_SONG = 'CHANGE_SONG';\nexport const REMOVE_SONG = 'REMOVE_SONG';\n\nexport const forward = () => ({\n  type: FORWARD,\n});\n\nexport const backward = () => ({\n  type: BACKWARD,\n});\n\nexport const shuffle = () => ({\n  type: SHUFFLE,\n});\n\nexport const startPlaylist = (songIds, playlistId) => ({\n  type: START_PLAYLIST,\n  songIds,\n  playlistId,\n});\n\nexport const userClickPlay = songId => ({\n  type: USER_CLICK_PLAY,\n  songId,\n});\n\nexport const changeSong = songId => ({\n  type: CHANGE_SONG,\n  songId,\n});\n\nexport const removeSong = songId => ({\n  type: REMOVE_SONG,\n  songId,\n});\n","const getPlayedSongIndices = (playedSongIndices, playingSongIndex, songIds) => {\n  let newPlayedSongIndices = [...playedSongIndices];\n\n  if (!playedSongIndices.includes(playingSongIndex)) {\n    newPlayedSongIndices = [...playedSongIndices, playingSongIndex];\n  }\n  if (newPlayedSongIndices.length === songIds.length) {\n    newPlayedSongIndices = [];\n  }\n\n  return newPlayedSongIndices;\n};\n\nexport const forwardLogic = (state) => {\n  const { songIds, playingSongIndex, playedSongIndices } = state;\n\n  let newPlayingSongIndex = playingSongIndex + 1;\n  if (newPlayingSongIndex > songIds.length - 1) {\n    newPlayingSongIndex = 0;\n  }\n\n  const newPlayedSongIndices = getPlayedSongIndices(\n    playedSongIndices, playingSongIndex, songIds,\n  );\n\n  return {\n    ...state,\n    playingSongIndex: newPlayingSongIndex,\n    prevSongIndex: playingSongIndex,\n    playedSongIndices: newPlayedSongIndices,\n  };\n};\n\nexport const backwardLogic = (state) => {\n  const { songIds, playingSongIndex, playedSongIndices, prevSongIndex } = state;\n\n  let newPrevSongIndex = prevSongIndex - 1;\n  if (newPrevSongIndex < 0) {\n    newPrevSongIndex = songIds.length - 1;\n  }\n\n  const newPlayedSongIndices = getPlayedSongIndices(\n    playedSongIndices, playingSongIndex, songIds,\n  );\n\n  return {\n    ...state,\n    playingSongIndex: prevSongIndex,\n    prevSongIndex: newPrevSongIndex,\n    playedSongIndices: newPlayedSongIndices,\n  };\n};\n\nexport const shuffleLogic = (state) => {\n  const { songIds, playedSongIndices, playingSongIndex } = state;\n\n  const history = [...playedSongIndices, playingSongIndex];\n\n  const nextSongIndices = songIds.map((_, index) => index)\n    .filter(index => !history.includes(index));\n\n  let nextSongIndex;\n  if (nextSongIndices.length === 0) {\n    nextSongIndex = Math.floor(Math.random() * songIds.length);\n  } else if (nextSongIndices.length === 1) {\n    [nextSongIndex] = nextSongIndices;\n  } else {\n    nextSongIndex = nextSongIndices[Math.floor(Math.random() * nextSongIndices.length)];\n  }\n\n  const newPlayedSongIndices = getPlayedSongIndices(\n    playedSongIndices, playingSongIndex, songIds,\n  );\n\n  return {\n    ...state,\n    playingSongIndex: nextSongIndex,\n    prevSongIndex: playingSongIndex,\n    playedSongIndices: newPlayedSongIndices,\n  };\n};\n\nexport const removeSongLogic = (state, action) => {\n  const { songIds, playingSongIndex, playedSongIndices } = state;\n\n  if (songIds.length === 1) return state;\n\n  const removeSongIndex = songIds.indexOf(action.songId);\n\n  const newSongIds = songIds.filter(id => id !== action.songId);\n  const newPlayedSongIndices = playedSongIndices.filter(index => index !== playingSongIndex);\n\n  let newPlayingSongIndex;\n\n  if (removeSongIndex > playingSongIndex) {\n    newPlayingSongIndex = playingSongIndex;\n  } else if (removeSongIndex <= playingSongIndex) {\n    newPlayingSongIndex = playingSongIndex - 1;\n\n    if (newPlayingSongIndex < 0) newPlayingSongIndex = newSongIds.length - 1;\n  }\n\n  return {\n    ...state,\n    songIds: newSongIds,\n    playedSongIndices: newPlayedSongIndices,\n    playingSongIndex: newPlayingSongIndex,\n  };\n};\n","import * as APIUtils from '../utils/session_utils';\n\nexport const RECEIVE_USER_LOGOUT = 'RECEIVE_USER_LOGOUT';\nexport const RECEIVE_CURRENT_USER = 'RECEIVE_CURRENT_USER';\nexport const RECEIVE_SESSION_ERRORS = 'RECEIVE_SESSION_ERRORS';\nexport const CLEAR_SESSION_ERRORS = 'CLEAR_SESSION_ERRORS';\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser,\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT,\n});\n\nexport const receiveSessionErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors,\n});\n\nexport const clearSessionErrors = () => ({\n  type: CLEAR_SESSION_ERRORS,\n});\n\nconst processServerRes = (res) => {\n  const user = { userId: res.data.id, username: res.data.username };\n\n  sessionStorage.setItem('CSRF-TOKEN', res.data.csrfToken);\n  sessionStorage.setItem('username', user.username);\n  sessionStorage.setItem('userId', user.userId);\n\n  return user;\n};\n\nexport const login = user => dispatch => APIUtils.login(user)\n  .then(res => dispatch(\n    receiveCurrentUser(processServerRes(res)),\n  ))\n  .catch(err => dispatch(receiveSessionErrors(err.response.data)));\n\nexport const signup = user => dispatch => APIUtils.signup(user)\n  .then(res => dispatch(\n    receiveCurrentUser(processServerRes(res)),\n  ))\n  .catch(err => dispatch(receiveSessionErrors(err.response.data)));\n\nexport const logout = () => (dispatch) => {\n  sessionStorage.removeItem('CSRF-TOKEN');\n  sessionStorage.removeItem('username');\n  sessionStorage.removeItem('userId');\n  dispatch(logoutUser());\n};\n","import axios from 'axios';\n\nexport const signup = userData => axios.request({\n  url: 'https://zing-lite-rails-api.herokuapp.com/api/users',\n  method: 'post',\n  headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n  data: userData,\n  withCredentials: true,\n});\n\nexport const login = userData => axios.request({\n  url: 'https://zing-lite-rails-api.herokuapp.com/api/session',\n  method: 'post',\n  headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n  data: userData,\n  withCredentials: true,\n});\n","import {\n  FORWARD,\n  BACKWARD,\n  SHUFFLE,\n  USER_CLICK_PLAY,\n  CHANGE_SONG,\n  REMOVE_SONG,\n  START_PLAYLIST,\n} from '../actions/audio_player_actions';\n\nimport {\n  forwardLogic,\n  backwardLogic,\n  shuffleLogic,\n  removeSongLogic,\n} from '../utils/audio_player_utils';\nimport { RECEIVE_USER_LOGOUT } from '../actions/session_actions';\nimport { RECEIVE_USER_PLAYLIST } from '../actions/user_playlist_actions';\n\n\nconst initialState = {\n  playingSongIndex: 0,\n  songIds: [2],\n  prevSongIndex: 0,\n  playedSongIndices: [],\n  currentPlaylist: 0,\n};\n\nconst audioPlayerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FORWARD: {\n      const newState = forwardLogic(state);\n      return newState;\n    }\n    case BACKWARD: {\n      const newState = backwardLogic(state);\n      return newState;\n    }\n    case SHUFFLE: {\n      const newState = shuffleLogic(state);\n      return newState;\n    }\n    case USER_CLICK_PLAY: {\n      const { songIds, playingSongIndex } = state;\n      let newSongIds = songIds.slice();\n\n      // remove song if repeated\n      newSongIds = newSongIds.filter(id => id !== action.songId);\n      newSongIds = [\n        ...newSongIds.slice(0, playingSongIndex + 1),\n        action.songId,\n        ...newSongIds.slice(playingSongIndex + 2, newSongIds.length),\n      ];\n\n      return {\n        ...state,\n        songIds: newSongIds,\n      };\n    }\n    case CHANGE_SONG: {\n      return {\n        ...state,\n        playingSongIndex: state.songIds.indexOf(action.songId),\n      };\n    }\n    case REMOVE_SONG: {\n      const newState = removeSongLogic(state, action);\n      return newState;\n    }\n    case START_PLAYLIST: {\n      return {\n        ...initialState,\n        songIds: action.songIds,\n        currentPlaylist: action.playlistId,\n      };\n    }\n    case RECEIVE_USER_PLAYLIST: {\n      return {\n        ...state,\n        currentPlaylist: parseInt(Object.keys(action.payload.data)[0], 10),\n      };\n    }\n    case RECEIVE_USER_LOGOUT: {\n      return initialState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default audioPlayerReducer;\n","import { RECEIVE_CURRENT_USER, RECEIVE_USER_LOGOUT } from '../actions/session_actions';\n\nconst initialState = {\n  id: null,\n  username: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return action.currentUser;\n    case RECEIVE_USER_LOGOUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\n\nimport audioPlayerReducer from './audio_player_reducer';\nimport userReducer from './user_reducer';\n\nconst sessionReducer = combineReducers({\n  audioPlayer: audioPlayerReducer,\n  user: userReducer,\n});\n\nexport default sessionReducer;\n","import {\n  RECEIVE_SESSION_ERRORS,\n  RECEIVE_CURRENT_USER,\n  CLEAR_SESSION_ERRORS,\n} from '../actions/session_actions';\n\nconst sessionErrorsReducer = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return action.errors;\n    case CLEAR_SESSION_ERRORS:\n      return [];\n    case RECEIVE_CURRENT_USER:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default sessionErrorsReducer;\n","import { combineReducers } from 'redux';\n\nimport sessionErrorsReducer from './session_errors_reducer';\n\nconst errorsReducer = combineReducers({\n  session: sessionErrorsReducer,\n});\n\nexport default errorsReducer;\n","import { combineReducers } from 'redux';\n\nimport entitiesReducer from './entities_reducer';\nimport sessionReducer from './session_reducer';\nimport errorsReducer from './errors_reducer';\n\n\nconst rootReducer = combineReducers({\n  entities: entitiesReducer,\n  session: sessionReducer,\n  errors: errorsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => createStore(\n  rootReducer,\n  preloadedState,\n  applyMiddleware(thunk, logger),\n);\n\n\nexport default configureStore;\n","export const isLoggedIn = ({ session }) => (\n  Boolean(session.user.userId)\n);\n\nexport const isLoggedOut = ({ session }) => (\n  !session.user.userId\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Route, Redirect } from 'react-router-dom';\n\nimport { isLoggedIn } from '../selectors/session_selectors';\n\nconst Auth = ({\n  component: Component, path, loggedIn, exact,\n}) => (\n  <Route\n    path={path}\n    exact={exact}\n    render={props => (\n      !loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/profile\" />\n      )\n    )}\n  />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/profile/login\" />\n      )\n    )}\n  />\n);\n\nconst mapStateToProps = state => ({ loggedIn: isLoggedIn(state) });\n\nexport const AuthRoute = withRouter(connect(mapStateToProps, null)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps, null)(Protected));\n","import React from 'react';\nimport { func, number } from 'prop-types';\n\n\nclass RootPage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = ({\n      hasFetchedPlaylist: false,\n    });\n  }\n\n  componentDidMount() {\n    const { fetchSomeSongs, fetchUserPlaylists, userId } = this.props;\n    const { hasFetchedPlaylist } = this.state;\n\n    fetchSomeSongs(0);\n\n    if (userId && !hasFetchedPlaylist) {\n      fetchUserPlaylists(userId);\n      this.setState({ hasFetchedPlaylist: true });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { fetchUserPlaylists, userId } = nextProps;\n    const { hasFetchedPlaylist } = this.state;\n\n    if (userId && !hasFetchedPlaylist) {\n      fetchUserPlaylists(userId);\n      this.setState({ hasFetchedPlaylist: true });\n    }\n  }\n\n  render() {\n    return <></>;\n  }\n}\n\nRootPage.defaultProps = {\n  userId: null,\n};\n\nRootPage.propTypes = {\n  userId: number,\n  fetchSomeSongs: func.isRequired,\n  fetchUserPlaylists: func.isRequired,\n};\n\nexport default RootPage;\n","import { connect } from 'react-redux';\nimport { fetchSomeSongs } from '../../actions/song_actions';\nimport { fetchUserPlaylists } from '../../actions/user_playlist_actions';\n\nimport RootPage from './root_page';\n\nconst mapStateToProps = ({ session }) => ({\n  userId: session.user.userId,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  fetchSomeSongs: offSet => dispatch(fetchSomeSongs(offSet)),\n  fetchUserPlaylists: userId => dispatch(fetchUserPlaylists(userId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchtoProps,\n)(RootPage);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { func, bool } from 'prop-types';\n\nimport * as SessionActions from '../../actions/session_actions';\n\nconst activeStyle = {\n  textDecoration: 'underline',\n  backgroundColor: 'rgba(192, 108, 132, 1)',\n};\n\nclass NavBar extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { logout } = this.props;\n    logout();\n    window.location.hash = '/home';\n  }\n\n  render() {\n    const { isLoggedIn } = this.props;\n\n    return (\n      <>\n        <NavLink to=\"/home\" className=\"Nav-Home\" activeStyle={activeStyle}>\n          Home\n        </NavLink>\n\n        <NavLink to=\"/playlist/\" className=\"Nav-Playlist\" activeStyle={activeStyle}>\n          Playlist\n        </NavLink>\n\n        <NavLink to=\"/about\" className=\"Nav-About\" activeStyle={activeStyle}>\n          About\n        </NavLink>\n\n        <NavLink to=\"/search\" className=\"Nav-Search\" activeStyle={activeStyle}>\n          Search\n        </NavLink>\n\n        <NavLink to=\"/profile\" className=\"Nav-Profile\" activeStyle={activeStyle}>\n          Profile\n        </NavLink>\n\n        <button\n          className={`Nav-Logout ${!isLoggedIn && 'Nav-Logout-loggedOut'}`}\n          type=\"button\"\n          onClick={this.handleLogout}\n        >\n          Logout\n        </button>\n      </>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  logout: func.isRequired,\n  isLoggedIn: bool.isRequired,\n};\n\nconst mapStateToProps = ({ session }) => ({\n  isLoggedIn: Boolean(session.user.userId),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(SessionActions.logout()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar));\n","export const getSongInfo = (song, artists, albums) => {\n  if (!song) return {};\n\n  const artist = artists[song.artistId];\n  const album = albums[song.albumId];\n\n  return {\n    id: song.id,\n    title: song.title,\n    url: song.url,\n    artist: artist.name,\n    artistAvatar: artist.avatarUrl,\n    album: album.name,\n    coverImage: album.coverImageUrl,\n  };\n};\n\nexport const getSongsInfo = ({ entities }) => {\n  const { songs, artists, albums } = entities;\n\n  return Object.values(songs).map(song => (\n    getSongInfo(song, artists, albums)\n  ));\n};\n\nexport const getPlaylistSongsInfo = ({ entities, session: { audioPlayer } }) => {\n  const { songs, artists, albums } = entities;\n\n  return audioPlayer.songIds.map(\n    songId => getSongInfo(songs[songId], artists, albums),\n  );\n};\n\nexport const getPlayingSongId = ({ session: { audioPlayer } }) => {\n  const { songIds, playingSongIndex } = audioPlayer;\n  return songIds[playingSongIndex];\n};\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst SearchIndexItem = (props) => {\n  const {\n    title,\n    artist,\n    album,\n  } = props;\n\n  return (\n    <>\n      <h4>{title}</h4>\n      <h5>{`${artist} - ${album}`}</h5>\n    </>\n  );\n};\n\nSearchIndexItem.propTypes = {\n  title: string.isRequired,\n  artist: string.isRequired,\n  album: string.isRequired,\n};\n\nexport default SearchIndexItem;\n","import React from 'react';\nimport { func } from 'prop-types';\nimport { debounce } from 'debounce';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { query: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.debounceSearch = debounce(query => props.fetchQueryData(query), 500);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.debounceSearch.flush();\n    this.setState({ query: '' });\n  }\n\n  handleChange(e) {\n    this.setState({\n      query: e.target.value,\n    });\n\n    const { clearSearchResults } = this.props;\n    const query = e.target.value;\n\n    if (query && query !== '') {\n      this.debounceSearch(query);\n    } else {\n      this.debounceSearch.clear();\n      clearSearchResults();\n    }\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <form className=\"Input-Form\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"Input-Form__Input\"\n          type=\"text\"\n          placeholder=\"Search for songs here...\"\n          value={query}\n          onChange={this.handleChange}\n        />\n\n        <div className=\"Input-Form__Buttons\">\n          <button type=\"button\" onClick={this.handleSubmit}>\n            <h6>Search</h6>\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  fetchQueryData: func.isRequired,\n  clearSearchResults: func.isRequired,\n};\n\nexport default SearchBar;\n","import { connect } from 'react-redux';\nimport SearchBar from './search_bar';\nimport { fetchQueryData, clearSearchResults } from '../../actions/search_bar_actions';\n\nconst mapDispatchToProps = dispatch => ({\n  fetchQueryData: query => dispatch(fetchQueryData(query)),\n  clearSearchResults: () => dispatch(clearSearchResults()),\n});\n\nconst SearchBarContainer = connect(\n  null,\n  mapDispatchToProps,\n)(SearchBar);\n\nexport default SearchBarContainer;\n","import React from 'react';\nimport { shape, arrayOf, number, string, func } from 'prop-types';\n\nimport SearchIndexItem from './search_index_item';\nimport SearchBarContainer from './search_bar_container';\n\nclass SearchIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  handlePlay(songId) {\n    const { userClickPlay, forward } = this.props;\n    return () => {\n      userClickPlay(songId);\n      forward();\n    };\n  }\n\n  render() {\n    const { songs } = this.props;\n\n    return (\n      <>\n        <SearchBarContainer />\n\n        <ul className=\"Col-List\">\n          {songs.map(song => (\n            <li\n              className=\"Col-List__Item\"\n              key={song.id}\n              role=\"presentation\"\n              onClick={this.handlePlay(song.id)}\n            >\n              <SearchIndexItem\n                {...song}\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nSearchIndex.propTypes = {\n  userClickPlay: func.isRequired,\n  forward: func.isRequired,\n  songs: arrayOf(shape({\n    id: number,\n    title: string,\n    url: string,\n    artist: string,\n    artistAvatar: string,\n    album: string,\n    coverImage: string,\n  })).isRequired,\n};\n\nexport default SearchIndex;\n","import { connect } from 'react-redux';\n\nimport { getSongInfo } from '../../selectors/song_selectors';\n\nimport SearchIndex from './search_index';\nimport { forward, userClickPlay } from '../../actions/audio_player_actions';\n\nconst mapStateToProps = ({ entities: { songs, artists, albums, searchResults } }) => ({\n  songs: searchResults.songIds.map(\n    songId => getSongInfo(songs[songId], artists, albums),\n  ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  forward: () => dispatch(forward()),\n  userClickPlay: songId => dispatch(userClickPlay(songId)),\n});\n\nconst SearchIndexContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchIndex);\n\nexport default SearchIndexContainer;\n","import React from 'react';\nimport { number, string, func } from 'prop-types';\n\nclass SongIndexItem extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  handlePlay() {\n    const { id, userClickPlay, forward } = this.props;\n    userClickPlay(id);\n    forward();\n  }\n\n  render() {\n    const { title, artist, coverImage } = this.props;\n\n    return (\n      <div className=\"image-wrapper\">\n        <figure>\n          <img\n            src={coverImage}\n            alt={title}\n          />\n\n          <button type=\"button\" onClick={this.handlePlay}>\n            <i className=\"far fa-play-circle fade\" />\n          </button>\n        </figure>\n\n        <h5>{title}</h5>\n        <h5 className=\"image-wrapper__artist\">{artist}</h5>\n      </div>\n    );\n  }\n}\n\nSongIndexItem.propTypes = {\n  id: number.isRequired,\n  title: string.isRequired,\n  artist: string.isRequired,\n  coverImage: string.isRequired,\n  userClickPlay: func.isRequired,\n  forward: func.isRequired,\n};\n\nexport default SongIndexItem;\n","import React from 'react';\nimport { func, arrayOf, shape, number, string } from 'prop-types';\n\nimport SongIndexItem from './song_index_item';\n\nclass SongIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { offSet: 20 };\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleScroll(e) {\n    const { offSet } = this.state;\n    if (offSet > 35) return;\n\n    const { fetchSomeSongs } = this.props;\n    const { scrollHeight, scrollTop, clientHeight } = e.target;\n\n    if (scrollHeight - scrollTop <= clientHeight + 1) {\n      fetchSomeSongs(offSet);\n      this.setState(state => ({\n        offSet: state.offSet + 20,\n      }));\n    }\n  }\n\n  render() {\n    const { songs, forward, userClickPlay } = this.props;\n\n    return (\n      <ul className=\"Row-List\" onScroll={this.handleScroll}>\n        {songs.map(song => (\n          <li className=\"Row-List__Item\" key={song.id}>\n            <SongIndexItem\n              {...song}\n              userClickPlay={userClickPlay}\n              forward={forward}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nSongIndex.propTypes = {\n  fetchSomeSongs: func.isRequired,\n  userClickPlay: func.isRequired,\n  forward: func.isRequired,\n  songs: arrayOf(shape({\n    id: number,\n    title: string,\n    url: string,\n    artist: string,\n    artistAvatar: string,\n    album: string,\n    coverImage: string,\n  })).isRequired,\n};\n\nexport default SongIndex;\n","import { connect } from 'react-redux';\nimport { fetchSomeSongs } from '../../actions/song_actions';\nimport SongIndex from './song_index';\nimport { getSongsInfo } from '../../selectors/song_selectors';\nimport { forward, userClickPlay } from '../../actions/audio_player_actions';\n\nconst mapStateToProps = state => ({\n  songs: getSongsInfo(state),\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  fetchSomeSongs: offSet => dispatch(fetchSomeSongs(offSet)),\n  forward: () => dispatch(forward()),\n  userClickPlay: songId => dispatch(userClickPlay(songId)),\n});\n\nconst SongIndexContainer = connect(\n  mapStateToProps,\n  mapDispatchtoProps,\n)(SongIndex);\n\n\nexport default SongIndexContainer;\n","import React from 'react';\nimport { string, func, arrayOf, number } from 'prop-types';\n\nconst UserPlaylistItem = (props) => {\n  const { name, coverImageUrl, handlePlay, songIds, id } = props;\n\n  return (\n    <div className=\"image-wrapper\">\n      <figure>\n        <img\n          className=\"profile__playlist__image\"\n          src={coverImageUrl}\n          alt={name}\n        />\n\n        <button type=\"button\" onClick={handlePlay(songIds, id)}>\n          <i className=\"far fa-play-circle\" />\n        </button>\n      </figure>\n\n      <h5 className=\"profile__playlist__name\">{name}</h5>\n    </div>\n  );\n};\n\nUserPlaylistItem.propTypes = {\n  id: number.isRequired,\n  name: string.isRequired,\n  coverImageUrl: string.isRequired,\n  handlePlay: func.isRequired,\n  songIds: arrayOf(number).isRequired,\n};\n\nexport default UserPlaylistItem;\n","import React from 'react';\nimport { shape, string, number, arrayOf, func } from 'prop-types';\nimport UserPlaylistItem from './user_playlist_item';\n\nclass UserPlaylistIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  handlePlay(songIds, playlistId) {\n    const { play } = this.props;\n    return () => {\n      play(songIds, playlistId);\n      window.location.hash = '/playlist';\n    };\n  }\n\n  render() {\n    const { user, userPlaylists } = this.props;\n\n    return (\n      <>\n        <h4 className=\"profile__playlist__header\">\n          <span>{`Hi, ${user.username}! Below are your personal playlists`}</span>\n        </h4>\n\n        <ul className=\"Row-List profile__playlist\">\n          {userPlaylists.map(playlist => (\n            <li className=\"Row-List__Item\" key={playlist.id}>\n              <UserPlaylistItem\n                {...playlist}\n                userId={user.userId}\n                handlePlay={this.handlePlay}\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nUserPlaylistIndex.propTypes = {\n  userPlaylists: arrayOf(shape({\n    id: number,\n    name: string,\n    songIds: arrayOf(number),\n  })).isRequired,\n  user: shape({\n    username: string,\n    userId: number,\n  }).isRequired,\n  play: func.isRequired,\n};\n\nexport default UserPlaylistIndex;\n","import { connect } from 'react-redux';\n\nimport UserPlaylistIndex from './user_playlist_index';\nimport { startPlaylist } from '../../actions/audio_player_actions';\n\nconst mapStateToProps = ({ entities, session }) => ({\n  userPlaylists: Object.values(entities.userPlaylists).reverse(),\n  user: session.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  play: (songIds, playlistId) => dispatch(startPlaylist(songIds, playlistId)),\n});\n\nconst UserPlaylistContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPlaylistIndex);\n\nexport default UserPlaylistContainer;\n","import { getSongInfo } from './song_selectors';\n\nexport const getCurrentSongInfo = ({ entities, session }) => {\n  const { songs, artists, albums } = entities;\n  const { audioPlayer: { songIds, playingSongIndex } } = session;\n\n  const playingSongId = songIds[playingSongIndex];\n  const currentSong = songs[playingSongId];\n\n  return getSongInfo(currentSong, artists, albums);\n};\n\nexport const isEndOfLoop = ({ session: { audioPlayer } }) => {\n  const { songIds, playedSongIndices } = audioPlayer;\n\n  return songIds.length - 1 === playedSongIndices.length;\n};\n","const convertTime = (time) => {\n  const minutes = Math.floor(time / 60);\n\n  let seconds = Math.floor(time - minutes * 60);\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n\n  return `${minutes}:${seconds}`;\n};\n\nexport function getTotalAudioTime() {\n  const { duration } = this.audioRef.current;\n\n  this.setState({\n    totalAudioTime: convertTime(duration),\n  });\n}\n\nexport function updateCurrentAudioTime() {\n  const { duration, currentTime } = this.audioRef.current;\n\n  let seekValue;\n  if (!duration) {\n    seekValue = 0;\n  } else {\n    seekValue = (currentTime / duration * 100);\n  }\n\n  this.setState({\n    currentAudioTime: convertTime(currentTime),\n    seekValue,\n  });\n}\n\nexport function handleSeek(e) {\n  const { duration } = this.audioRef.current;\n\n  const seekTime = duration * (e.target.value / 100);\n  this.audioRef.current.currentTime = seekTime;\n}\n","export function handlePlay() {\n  this.setState({ isPlaying: true });\n}\n\nexport function handlePause() {\n  this.setState({ isPlaying: false });\n}\n\nexport function playAudio() {\n  this.audioRef.current.play();\n}\n\nexport function pauseAudio() {\n  this.audioRef.current.pause();\n}\n","export function handleVolume(e) {\n  const newVolume = e.target.value / 100;\n  this.audioRef.current.volume = newVolume;\n}\n\nexport function handleMute() {\n  const { volume } = this.audioRef.current;\n\n  this.setState({\n    preMuteVolume: volume * 100,\n  });\n\n  this.audioRef.current.volume = 0;\n}\n\nexport function handleUnmute(preMuteVolume) {\n  return () => { this.audioRef.current.volume = preMuteVolume / 100; };\n}\n\nexport function updateVolume() {\n  const { volume } = this.audioRef.current;\n  this.setState({\n    volume: volume * 100,\n  });\n}\n","export function toggleShuffle(isOnShuffle) {\n  return () => {\n    this.setState({ isOnShuffle: !isOnShuffle });\n  };\n}\n\nexport function toggleLoop(isOnLoop) {\n  return () => {\n    this.setState({ isOnLoop: !isOnLoop });\n  };\n}\n","import * as seekSliderHandlers from './seek_slider';\nimport * as playPauseHandlers from './play_pause_button';\nimport * as volumeHandlers from './volume_slider';\nimport * as shuffleLoopHandlers from './shuffle_loop_button';\n\nexport default {\n  ...seekSliderHandlers,\n  ...playPauseHandlers,\n  ...volumeHandlers,\n  ...shuffleLoopHandlers,\n};\n","import React from 'react';\nimport {\n  bool, string, func, shape, instanceOf,\n} from 'prop-types';\n\nconst Audio = (props) => {\n  const {\n    audioRef,\n    url,\n    isEndOfLoop,\n    isOnLoop,\n    isOnShuffle,\n    forward,\n    shuffle,\n    getTotalAudioTime,\n    updateCurrentAudioTime,\n    updateVolume,\n    handlePause,\n    handlePlay,\n    playAudio,\n  } = props;\n\n  const handleEnd = () => {\n    if (isEndOfLoop && !isOnLoop) {\n      return;\n    }\n\n    if (isOnShuffle) {\n      shuffle();\n    } else {\n      forward();\n    }\n\n    window.setTimeout(() => { playAudio(); }, 0);\n  };\n\n  return (\n    <audio\n      src={url}\n      ref={audioRef}\n      onLoadedMetadata={getTotalAudioTime}\n      onDurationChange={playAudio}\n      onTimeUpdate={updateCurrentAudioTime}\n      onVolumeChange={updateVolume}\n      onPause={handlePause}\n      onPlay={handlePlay}\n      onEnded={handleEnd}\n    />\n  );\n};\n\nAudio.propTypes = {\n  audioRef: shape({ current: instanceOf(Element) }).isRequired,\n  url: string.isRequired,\n  isEndOfLoop: bool.isRequired,\n  isOnLoop: bool.isRequired,\n  isOnShuffle: bool.isRequired,\n  forward: func.isRequired,\n  shuffle: func.isRequired,\n  getTotalAudioTime: func.isRequired,\n  updateCurrentAudioTime: func.isRequired,\n  updateVolume: func.isRequired,\n  handlePause: func.isRequired,\n  handlePlay: func.isRequired,\n  playAudio: func.isRequired,\n};\n\nexport default Audio;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst SpinningDisc = (props) => {\n  const { album, coverImage } = props;\n\n  return (\n    <figure className=\"SpinningDisc\">\n      <img src={coverImage} alt={album} />\n    </figure>\n  );\n};\n\nSpinningDisc.propTypes = {\n  album: string.isRequired,\n  coverImage: string.isRequired,\n};\n\nexport default SpinningDisc;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst Marquee = (props) => {\n  const { title, artist, artistAvatar } = props;\n\n  return (\n    <div className=\"Marquee\">\n      <p>\n        <img\n          src={artistAvatar}\n          alt={artist}\n        />\n        <span>{`${title} - ${artist}`}</span>\n      </p>\n    </div>\n  );\n};\n\nMarquee.propTypes = {\n  title: string.isRequired,\n  artist: string.isRequired,\n  artistAvatar: string.isRequired,\n};\n\nexport default Marquee;\n","import React from 'react';\nimport { bool, func } from 'prop-types';\n\nconst PlayPauseButton = (props) => {\n  const { isPlaying, playAudio, pauseAudio } = props;\n\n  return (\n    isPlaying ? (\n      <button type=\"button\" onClick={pauseAudio}>\n        <i className=\"far fa-pause-circle active\" />\n      </button>\n    ) : (\n      <button type=\"button\" onClick={playAudio}>\n        <i className=\"far fa-play-circle\" />\n      </button>\n    )\n  );\n};\n\nPlayPauseButton.propTypes = {\n  isPlaying: bool.isRequired,\n  playAudio: func.isRequired,\n  pauseAudio: func.isRequired,\n};\n\nexport default PlayPauseButton;\n","import React from 'react';\nimport { func } from 'prop-types';\n\nconst ForwardButton = (props) => {\n  const { forward, playAudio } = props;\n\n  const playNextSong = () => {\n    forward();\n    window.setTimeout(() => { playAudio(); }, 0);\n  };\n\n  return (\n    <button type=\"button\" onClick={playNextSong}>\n      <i className=\"fas fa-step-forward\" />\n    </button>\n  );\n};\n\nForwardButton.propTypes = {\n  forward: func.isRequired,\n  playAudio: func.isRequired,\n};\n\nexport default ForwardButton;\n","import React from 'react';\nimport { func, bool } from 'prop-types';\n\nconst ShuffleButton = (props) => {\n  const { isOnShuffle, toggleShuffle } = props;\n\n  return (\n    <button type=\"button\" onClick={toggleShuffle(isOnShuffle)}>\n      <i className={`fas fa-random ${isOnShuffle && 'active'}`} />\n    </button>\n  );\n};\n\nShuffleButton.propTypes = {\n  isOnShuffle: bool.isRequired,\n  toggleShuffle: func.isRequired,\n};\n\nexport default ShuffleButton;\n","import React from 'react';\nimport { func } from 'prop-types';\n\nconst BackwardButton = (props) => {\n  const { backward, playAudio } = props;\n\n  const playPrevSong = () => {\n    backward();\n    window.setTimeout(() => { playAudio(); }, 0);\n  };\n\n  return (\n    <button type=\"button\" onClick={playPrevSong}>\n      <i className=\"fas fa-step-backward\" />\n    </button>\n  );\n};\n\nBackwardButton.propTypes = {\n  backward: func.isRequired,\n  playAudio: func.isRequired,\n};\n\nexport default BackwardButton;\n","import React from 'react';\nimport { func, string, number } from 'prop-types';\n\nconst SeekSlider = (props) => {\n  const {\n    seekValue, handleSeek, currentAudioTime, totalAudioTime,\n  } = props;\n\n  return (\n    <div className=\"SeekSlider\">\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"1\"\n        value={seekValue}\n        onChange={handleSeek}\n      />\n\n      <p>{`${currentAudioTime}/${totalAudioTime}`}</p>\n    </div>\n  );\n};\n\nSeekSlider.propTypes = {\n  seekValue: number.isRequired,\n  handleSeek: func.isRequired,\n  currentAudioTime: string.isRequired,\n  totalAudioTime: string.isRequired,\n};\n\nexport default SeekSlider;\n","import React from 'react';\nimport { number, func } from 'prop-types';\n\nconst VolumeSlider = (props) => {\n  const {\n    volume, preMuteVolume, handleMute, handleUnmute, handleVolume,\n  } = props;\n\n  let volumeButton;\n  if (volume === 0) {\n    volumeButton = (\n      <button type=\"button\" className=\"volume-button\" onClick={handleUnmute(preMuteVolume)}>\n        <i className=\"fas fa-volume-mute\" />\n      </button>\n    );\n  } else {\n    volumeButton = (\n      <button type=\"button\" className=\"volume-button\" onClick={handleMute}>\n        <i className=\"fas fa-volume-up active\" />\n      </button>\n    );\n  }\n\n  return (\n    <>\n      {volumeButton}\n\n      {/* <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"1\"\n        value={volume}\n        onChange={handleVolume}\n      /> */}\n    </>\n  );\n};\n\nVolumeSlider.propTypes = {\n  volume: number.isRequired,\n  preMuteVolume: number.isRequired,\n  handleMute: func.isRequired,\n  handleUnmute: func.isRequired,\n  handleVolume: func.isRequired,\n};\n\nexport default VolumeSlider;\n","import React from 'react';\nimport { func, bool } from 'prop-types';\n\nconst LoopButton = (props) => {\n  const { isOnLoop, toggleLoop } = props;\n\n  return (\n    <button type=\"button\" onClick={toggleLoop(isOnLoop)}>\n      <i className={`fas fa-redo-alt ${isOnLoop && 'active'}`} />\n    </button>\n  );\n};\n\nLoopButton.propTypes = {\n  isOnLoop: bool.isRequired,\n  toggleLoop: func.isRequired,\n};\n\nexport default LoopButton;\n","import React from 'react';\nimport { string, func, bool } from 'prop-types';\n\nimport eventHandlers from './event_handlers/event_handlers';\n\nimport Audio from './audio_player_components/audio';\nimport SpinningDisc from './audio_player_components/spinning_disc';\nimport Marquee from './audio_player_components/marquee';\nimport PlayPauseButton from './audio_player_components/play_pause_button';\nimport ForwardButton from './audio_player_components/forward_button';\nimport ShuffleButton from './audio_player_components/shuffle_button';\nimport BackwardButton from './audio_player_components/backward_button';\nimport SeekSlider from './audio_player_components/seek_slider';\nimport VolumeSlider from './audio_player_components/volume_slider';\nimport LoopButton from './audio_player_components/loop_button';\n\nclass AudioPlayer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isPlaying: false,\n      isOnLoop: false,\n      isOnShuffle: false,\n      seekValue: 0,\n      totalAudioTime: '0:00',\n      currentAudioTime: '0:00',\n      volume: 50,\n      preMuteVolume: 50,\n    };\n\n    this.audioRef = React.createRef();\n\n    this.getTotalAudioTime = eventHandlers.getTotalAudioTime.bind(this);\n    this.updateCurrentAudioTime = eventHandlers.updateCurrentAudioTime.bind(this);\n    this.handleSeek = eventHandlers.handleSeek.bind(this);\n    this.handlePlay = eventHandlers.handlePlay.bind(this);\n    this.handlePause = eventHandlers.handlePause.bind(this);\n    this.playAudio = eventHandlers.playAudio.bind(this);\n    this.pauseAudio = eventHandlers.pauseAudio.bind(this);\n    this.handleVolume = eventHandlers.handleVolume.bind(this);\n    this.handleMute = eventHandlers.handleMute.bind(this);\n    this.handleUnmute = eventHandlers.handleUnmute.bind(this);\n    this.updateVolume = eventHandlers.updateVolume.bind(this);\n    this.toggleShuffle = eventHandlers.toggleShuffle.bind(this);\n    this.toggleLoop = eventHandlers.toggleLoop.bind(this);\n  }\n\n  render() {\n    const {\n      title,\n      url,\n      artist,\n      artistAvatar,\n      album,\n      coverImage,\n      isEndOfLoop,\n      forward,\n      backward,\n      shuffle,\n    } = this.props;\n\n    const {\n      isPlaying,\n      isOnLoop,\n      isOnShuffle,\n      volume,\n      preMuteVolume,\n      seekValue,\n      currentAudioTime,\n      totalAudioTime,\n    } = this.state;\n\n    return (\n      <>\n        <Audio\n          audioRef={this.audioRef}\n          url={url}\n          forward={forward}\n          shuffle={shuffle}\n          isEndOfLoop={isEndOfLoop}\n          isOnLoop={isOnLoop}\n          isOnShuffle={isOnShuffle}\n          getTotalAudioTime={this.getTotalAudioTime}\n          updateCurrentAudioTime={this.updateCurrentAudioTime}\n          updateVolume={this.updateVolume}\n          handlePause={this.handlePause}\n          handlePlay={this.handlePlay}\n          playAudio={this.playAudio}\n        />\n\n\n        <div className=\"AudioPlayerContainer\">\n          <SpinningDisc album={album} coverImage={coverImage} />\n\n          <Marquee title={title} artist={artist} artistAvatar={artistAvatar} />\n\n          <div className=\"Controls1\">\n            <BackwardButton\n              backward={backward}\n              playAudio={this.playAudio}\n            />\n            <PlayPauseButton\n              isPlaying={isPlaying}\n              playAudio={this.playAudio}\n              pauseAudio={this.pauseAudio}\n            />\n            <ForwardButton\n              forward={forward}\n              playAudio={this.playAudio}\n            />\n          </div>\n\n          <div className=\"Controls2\">\n            <ShuffleButton\n              isOnShuffle={isOnShuffle}\n              toggleShuffle={this.toggleShuffle}\n            />\n            <LoopButton\n              isEndOfLoop={isEndOfLoop}\n              isOnLoop={isOnLoop}\n              toggleLoop={this.toggleLoop}\n            />\n            <VolumeSlider\n              volume={volume}\n              preMuteVolume={preMuteVolume}\n              handleMute={this.handleMute}\n              handleUnmute={this.handleUnmute}\n              handleVolume={this.handleVolume}\n            />\n          </div>\n\n          <SeekSlider\n            seekValue={seekValue}\n            currentAudioTime={currentAudioTime}\n            totalAudioTime={totalAudioTime}\n            handleSeek={this.handleSeek}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nAudioPlayer.propTypes = {\n  title: string.isRequired,\n  url: string.isRequired,\n  artist: string.isRequired,\n  artistAvatar: string.isRequired,\n  album: string.isRequired,\n  coverImage: string.isRequired,\n  isEndOfLoop: bool.isRequired,\n  forward: func.isRequired,\n  backward: func.isRequired,\n  shuffle: func.isRequired,\n};\n\nexport default AudioPlayer;\n","import { connect } from 'react-redux';\n\nimport { getCurrentSongInfo, isEndOfLoop } from '../../selectors/audio_player_selectors';\nimport { forward, backward, shuffle } from '../../actions/audio_player_actions';\n\nimport AudioPlayer from './audio_player';\n\nconst mapStateToProps = state => ({\n  ...getCurrentSongInfo(state),\n  isEndOfLoop: isEndOfLoop(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  forward: () => dispatch(forward()),\n  backward: () => dispatch(backward()),\n  shuffle: () => dispatch(shuffle()),\n});\n\nconst AudioPlayerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AudioPlayer);\n\nexport default AudioPlayerContainer;\n","import React from 'react';\n\nconst SoundWave = () => (\n  <span className=\"playlist-item__sound-wave\">\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n  </span>\n);\n\nexport default SoundWave;\n","import React from 'react';\nimport { string, bool, number } from 'prop-types';\nimport SoundWave from './soundwave';\n\nconst PlaylistIndexItem = (props) => {\n  const {\n    id,\n    title,\n    artist,\n    album,\n    isPlaying,\n    handleRemoveSong,\n  } = props;\n\n  return (\n    <>\n      <div className=\"playlist-item__inner-wrapper\">\n        {isPlaying ? <SoundWave /> : null}\n        <span>\n          <h4 className=\"playlist-item__title\">{title}</h4>\n        </span>\n\n        <button\n          className=\"playlist-item__X\"\n          type=\"button\"\n          onClick={handleRemoveSong(id)}\n        >\n          <h6>remove</h6>\n        </button>\n      </div>\n\n      <h5>{`${artist} - ${album}`}</h5>\n    </>\n  );\n};\n\nPlaylistIndexItem.propTypes = {\n  id: number.isRequired,\n  title: string.isRequired,\n  artist: string.isRequired,\n  album: string.isRequired,\n  isPlaying: bool.isRequired,\n};\n\nexport default PlaylistIndexItem;\n","import React from 'react';\nimport { string, number, arrayOf, func } from 'prop-types';\n\nclass PlaylistForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newName: `${props.playlistName || ''}`,\n    };\n\n    this.handleNew = this.handleNew.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { playlistName } = nextProps;\n    this.setState({ newName: `${playlistName || ''}` });\n  }\n\n  makePlaylistData() {\n    const { newName } = this.state;\n    const { userId, songIds } = this.props;\n\n    return {\n      playlist: {\n        name: newName,\n        user_id: userId,\n        song_ids: songIds,\n      },\n    };\n  }\n\n  handleNew() {\n    const { createPlaylist } = this.props;\n    createPlaylist(this.makePlaylistData());\n  }\n\n  handleEdit() {\n    const { playlistId, editPlaylist } = this.props;\n    editPlaylist(playlistId, this.makePlaylistData());\n  }\n\n  handleChange(e) {\n    this.setState({\n      newName: e.target.value,\n    });\n  }\n\n  render() {\n    const { playlistName, userId } = this.props;\n    const { newName } = this.state;\n\n    if (!userId) return null;\n\n    return (\n      <form className=\"Input-Form\" onSubmit={e => e.preventDefault()}>\n        <input\n          className=\"Input-Form__Input\"\n          type=\"text\"\n          placeholder=\"Name this playlist...\"\n          value={newName}\n          onChange={this.handleChange}\n        />\n\n        <div className=\"Input-Form__Buttons\">\n          {playlistName\n            ? (\n              <button type=\"button\" onClick={this.handleEdit}>\n                <h6>Save/Edit</h6>\n              </button>\n            ) : null}\n\n          <button type=\"button\" onClick={this.handleNew}>\n            <h6>Create New</h6>\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nPlaylistForm.defaultProps = {\n  userId: null,\n  playlistId: undefined,\n  playlistName: undefined,\n};\n\nPlaylistForm.propTypes = {\n  userId: number,\n  songIds: arrayOf(number).isRequired,\n  playlistId: number,\n  playlistName: string,\n  createPlaylist: func.isRequired,\n  editPlaylist: func.isRequired,\n};\n\nexport default PlaylistForm;\n","import { connect } from 'react-redux';\n\nimport { createPlaylist, editPlaylist } from '../../actions/user_playlist_actions';\nimport { getPlaylistId, getPlaylistName } from '../../selectors/playlist_selectors';\n\nimport PlaylistFrom from './playlist_form';\n\nconst mapStateToProps = (state) => {\n  const playlistId = getPlaylistId(state);\n  const playlistName = getPlaylistName(state, playlistId);\n\n  return {\n    userId: state.session.user.userId,\n    playlistId,\n    playlistName,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  createPlaylist: songIds => dispatch(createPlaylist(songIds)),\n  editPlaylist: (playlistId, playlistData) => dispatch(editPlaylist(playlistId, playlistData)),\n});\n\nconst PlaylistFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlaylistFrom);\n\nexport default PlaylistFormContainer;\n","export const getPlaylistId = ({ session }) => session.audioPlayer.currentPlaylist;\n\nexport const getPlaylistName = ({ entities }, playlistId) => {\n  let playlistName;\n  try {\n    playlistName = entities.userPlaylists[playlistId].name;\n  } catch (err) {\n    playlistName = undefined;\n  }\n\n  return playlistName;\n};\n","import React from 'react';\nimport { shape, arrayOf, number, string, func } from 'prop-types';\n\nimport PlaylistIndexItem from './playlist_index_item';\nimport PlaylistFormContainer from '../playlist_form/playlist_form_container';\n\nclass PlaylistIndex extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeSong = this.handleChangeSong.bind(this);\n    this.handleRemoveSong = this.handleRemoveSong.bind(this);\n  }\n\n  handleChangeSong(id) {\n    const { changeSong } = this.props;\n    return (e) => {\n      e.stopPropagation();\n      changeSong(id);\n    };\n  }\n\n  handleRemoveSong(id) {\n    const { removeSong } = this.props;\n    return (e) => {\n      e.stopPropagation();\n      removeSong(id);\n    };\n  }\n\n  render() {\n    const { songs, playingSongId } = this.props;\n\n    return (\n      <>\n        <PlaylistFormContainer songIds={songs.map(song => song.id)} />\n\n        <ul className=\"Col-List\">\n\n          {songs.map(song => (\n            <li\n              className={`\n              Col-List__Item playlist-item \n              ${song.id === playingSongId ? 'playlist-item--playing' : ''}\n            `}\n              key={song.id}\n              role=\"presentation\"\n              onClick={this.handleChangeSong(song.id)}\n            >\n              <PlaylistIndexItem\n                {...song}\n                isPlaying={song.id === playingSongId}\n                handleRemoveSong={this.handleRemoveSong}\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nPlaylistIndex.propTypes = {\n  playingSongId: number.isRequired,\n  changeSong: func.isRequired,\n  songs: arrayOf(shape({\n    id: number,\n    title: string,\n    url: string,\n    artist: string,\n    artistAvatar: string,\n    album: string,\n    coverImage: string,\n  })).isRequired,\n};\n\nexport default PlaylistIndex;\n","import { connect } from 'react-redux';\n\nimport { getPlaylistSongsInfo, getPlayingSongId } from '../../selectors/song_selectors';\nimport PlaylistIndex from './playlist_index';\nimport { changeSong, removeSong } from '../../actions/audio_player_actions';\n\nconst mapStateToProps = state => ({\n  songs: getPlaylistSongsInfo(state),\n  playingSongId: getPlayingSongId(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeSong: songId => dispatch(changeSong(songId)),\n  removeSong: songId => dispatch(removeSong(songId)),\n});\n\nconst PlaylistIndexContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlaylistIndex);\n\nexport default PlaylistIndexContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { func, oneOf, string, arrayOf } from 'prop-types';\n\nclass SessionForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      password: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { clearSessionErrors, errors } = this.props;\n    if (errors.length !== 0) clearSessionErrors();\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({\n        [field]: e.target.value,\n      });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { processForm } = this.props;\n    const { username, password } = this.state;\n\n    const userData = { user: { username, password } };\n    processForm(userData);\n\n    this.setState({\n      username: '',\n      password: '',\n    });\n  }\n\n  render() {\n    const { formType, errors } = this.props;\n    const { username, password } = this.state;\n\n    return (\n      <form className=\"session-form\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"session-form__input\"\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={this.update('username')}\n        />\n        <br />\n        <input\n          className=\"session-form__input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={this.update('password')}\n        />\n\n        <ul className=\"session-form__errors\">\n          {errors.map((error, i) => (\n            <li key={i}>{error}</li>\n          ))}\n        </ul>\n        <br />\n\n        <button className=\"session-form__button\" type=\"submit\">{formType}</button>\n        <button className=\"session-form__button\" type=\"submit\">DEMO</button>\n\n        {formType === 'LOG IN'\n          ? (\n            <p className=\"session-form__text\">\n              {'Don\\'t have an account? '}\n              <Link className=\"session-form__link\" to=\"/profile/signup\">Signup</Link>\n            </p>\n          ) : (\n            <p>\n              {'Already have an account? '}\n              <Link className=\"session-form__link\" to=\"/profile/login\">Login</Link>\n            </p>\n          )}\n      </form>\n    );\n  }\n}\n\nSessionForm.propTypes = {\n  formType: oneOf(['LOG IN', 'SIGN UP']).isRequired,\n  errors: arrayOf(string).isRequired,\n  processForm: func.isRequired,\n  clearSessionErrors: func.isRequired,\n};\n\nexport default SessionForm;\n","import { connect } from 'react-redux';\n\nimport { login, clearSessionErrors } from '../../actions/session_actions';\nimport SessionForm from './session_form';\n\nconst mapStateToProps = ({ errors }) => ({\n  errors: errors.session,\n  formType: 'LOG IN',\n});\n\nconst mapDispatchToProps = dispatch => ({\n  processForm: user => dispatch(login(user)),\n  clearSessionErrors: () => dispatch(clearSessionErrors()),\n});\n\nconst LoginFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SessionForm);\n\nexport default LoginFormContainer;\n","import { connect } from 'react-redux';\n\nimport { signup, clearSessionErrors } from '../../actions/session_actions';\nimport SessionForm from './session_form';\n\nconst mapStateToProps = ({ errors }) => ({\n  errors: errors.session,\n  formType: 'SIGN UP',\n});\n\nconst mapDispatchToProps = dispatch => ({\n  processForm: user => dispatch(signup(user)),\n  clearSessionErrors: () => dispatch(clearSessionErrors()),\n});\n\nconst SignupFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SessionForm);\n\nexport default SignupFormContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport { bool } from 'prop-types';\nimport { AuthRoute, ProtectedRoute } from '../utils/route_utils';\n\nimport RootPage from './root_page/root_page_container';\nimport NavBar from './nav/nav_bar';\nimport SearchIndexContainer from './search_index/search_index_container';\nimport SongIndexContainer from './song_index/song_index_container';\nimport UserPlaylistContainer from './user_playlist/user_playlist_index_container';\nimport AudioPlayerContainer from './audio_player/audio_player_container';\nimport PlaylistIndexContainer from './playlist_index/playlist_index_container';\nimport LoginFormContainer from './session_form/login_form_container';\nimport SignupFormContainer from './session_form/signup_form_container';\n\nconst App = (props) => {\n  const { isLoggedIn } = props;\n\n  return (\n    <div className={`Site ${isLoggedIn && 'Site-LoggedIn'}`}>\n      <NavBar />\n\n      <div className=\"Main\">\n        <Route path=\"/home\" component={SongIndexContainer} />\n\n        <Route exact path=\"/playlist\" component={PlaylistIndexContainer} />\n        <ProtectedRoute exact path=\"/playlist/:playlistId\" component={PlaylistIndexContainer} />\n\n        <Route path=\"/search\" component={SearchIndexContainer} />\n\n        <ProtectedRoute exact path=\"/profile\" component={UserPlaylistContainer} />\n\n        <AuthRoute path=\"/profile/login\" component={LoginFormContainer} />\n        <AuthRoute path=\"/profile/signup\" component={SignupFormContainer} />\n      </div>\n\n      <aside className=\"Aside\">\n        <Route path=\"/\" component={RootPage} />\n        <Route path=\"/\" component={AudioPlayerContainer} />\n      </aside>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  isLoggedIn: bool.isRequired,\n};\n\nconst mapStateToProps = ({ session }) => ({ isLoggedIn: Boolean(session.user.userId) });\n\nexport default withRouter(connect(mapStateToProps, null)(App));\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { element } from 'prop-types';\n\nclass ErrorHandler extends React.Component {\n  constructor() {\n    super();\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    const { children } = this.props;\n    return children;\n  }\n}\n\nErrorHandler.propTypes = {\n  children: element.isRequired,\n};\n\nexport default ErrorHandler;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { instanceOf } from 'prop-types';\n\nimport App from './app';\nimport ErrorHandler from './error_handler';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <ErrorHandler>\n        <App />\n      </ErrorHandler>\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;\n\nRoot.propTypes = {\n  store: instanceOf(Object).isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/store';\nimport Root from './components/root';\n\nimport 'normalize.css';\nimport './assets/css/index.scss';\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const root = document.getElementById('root');\n\n  let store;\n\n  if (sessionStorage.getItem('userId')) {\n    const preloadedState = {\n      session: {\n        user: {\n          userId: parseInt(sessionStorage.getItem('userId'), 10),\n          username: sessionStorage.getItem('username'),\n        },\n      },\n    };\n    store = configureStore(preloadedState);\n  } else {\n    store = configureStore();\n  }\n\n  ReactDOM.render(\n    <Root store={store} />,\n    root,\n  );\n});\n"],"sourceRoot":""}