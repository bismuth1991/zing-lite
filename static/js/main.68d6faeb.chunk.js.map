{"version":3,"sources":["actions/song_actions.js","utils/song_utils.js","actions/modal_actions.js","actions/user_playlist_actions.js","utils/user_playlist_utils.js","actions/search_bar_actions.js","utils/search_bar_utils.js","reducers/songs_reducer.js","reducers/artists_reducer.js","reducers/albums_reducer.js","reducers/user_playlists_reducer.js","reducers/search_results_reducer.js","reducers/entities_reducer.js","actions/audio_player_actions.js","utils/audio_player_utils.js","actions/session_actions.js","utils/session_utils.js","reducers/audio_player_reducer.js","reducers/user_reducer.js","reducers/session_reducer.js","reducers/session_errors_reducer.js","reducers/errors_reducer.js","reducers/ui_loading_reducer.js","reducers/modal_reducer.js","reducers/ui_reducer.js","reducers/root_reducer.js","store/store.js","selectors/session_selectors.js","utils/route_utils.jsx","components/root_page/root_page.jsx","components/root_page/root_page_container.js","components/nav/nav_bar.jsx","selectors/song_selectors.js","components/search_index/search_index_item.jsx","components/search_index/search_bar.jsx","components/search_index/search_bar_container.js","components/search_index/search_index.jsx","components/search_index/search_index_container.js","components/utils/loading_icon.jsx","components/song_index/song_index_item.jsx","components/song_index/song_index_item_container.js","components/song_index/song_index.jsx","components/song_index/song_index_container.js","components/user_playlist/user_playlist_item.jsx","components/user_playlist/user_playlist_index.jsx","components/user_playlist/user_playlist_index_container.js","selectors/audio_player_selectors.js","components/audio_player/event_handlers/seek_slider.js","components/audio_player/event_handlers/play_pause_button.js","components/audio_player/event_handlers/volume_slider.js","components/audio_player/event_handlers/shuffle_loop_button.js","components/audio_player/event_handlers/event_handlers.js","components/audio_player/audio_player_components/audio.jsx","components/audio_player/audio_player_components/spinning_disc.jsx","components/audio_player/audio_player_components/marquee.jsx","components/audio_player/audio_player_components/play_pause_button.jsx","components/audio_player/audio_player_components/forward_button.jsx","components/audio_player/audio_player_components/shuffle_button.jsx","components/audio_player/audio_player_components/backward_button.jsx","components/audio_player/audio_player_components/seek_slider.jsx","components/audio_player/audio_player_components/volume_slider.jsx","components/audio_player/audio_player_components/loop_button.jsx","components/audio_player/audio_player.jsx","components/audio_player/audio_player_container.js","components/playlist_index/soundwave.jsx","components/playlist_index/playlist_index_item.jsx","components/playlist_form/playlist_form.jsx","components/playlist_form/playlist_form_container.js","selectors/playlist_selectors.js","components/playlist_index/playlist_index.jsx","components/playlist_index/playlist_index_container.js","components/session_form/session_form.jsx","components/session_form/login_form_container.js","components/session_form/signup_form_container.js","components/about/about.jsx","components/modal/text_alert.jsx","components/modal/modal.jsx","components/modal/modal_container.js","components/app.jsx","components/error_handler.jsx","components/root.jsx","index.jsx"],"names":["fetchSomeSongs","offSet","arguments","length","undefined","dispatch","axios","get","concat","songApiUtil","then","payload","type","receiveSongs","catch","err","console","warn","openModal","modal","receiveUserPlaylist","fetchUserPlaylists","userId","request","url","method","headers","X-CSRF-Token","sessionStorage","getItem","withCredentials","userPlaylistApiUtil","receiveUserPlaylists","createPlaylist","playlistData","data","Promise","all","content","editPlaylist","playlistId","fetchQueryData","query","fetchDataByQuery","receiveQueryData","initialState","2","id","title","artistId","albumId","songsReducer","state","action","Object","objectSpread","songs","7","name","avatarUrl","artistsReducer","artists","12","coverImageUrl","albumsReducer","albums","userPlaylistsReducer","playlists","newState","songIds","searchResultsReducer","searchResults","entitiesReducer","combineReducers","userPlaylists","userClickPlay","songId","getPlayedSongIndices","playedSongIndices","playingSongIndex","newPlayedSongIndices","toConsumableArray","includes","receiveCurrentUser","currentUser","receiveSessionErrors","errors","processServerRes","res","user","username","setItem","csrfToken","login","userData","response","signup","prevSongIndex","currentPlaylist","audioPlayerReducer","newPlayingSongIndex","forwardLogic","newPrevSongIndex","backwardLogic","nextSongIndex","history","nextSongIndices","map","_","index","filter","Math","floor","random","slicedToArray","shuffleLogic","newSongIds","slice","indexOf","removeSongIndex","removeSongLogic","parseInt","keys","userReducer","sessionReducer","audioPlayer","sessionErrorsReducer","errorsReducer","session","homePage","profilePage","loadingReducer","modalReducer","uiReducer","loading","rootReducer","entities","ui","configureStore","preloadedState","createStore","applyMiddleware","thunk","logger","isLoggedIn","_ref","Boolean","mapStateToProps","loggedIn","AuthRoute","withRouter","connect","Component","component","path","exact","react_default","a","createElement","Route","render","props","Redirect","to","ProtectedRoute","_ref2","toPath","rest","objectWithoutProperties","assign","RootPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasFetchedPlaylist","_this$props","setState","nextProps","Fragment","React","defaultProps","activeStyle","textDecoration","backgroundColor","NavBar","handleLogout","bind","assertThisInitialized","logout","window","location","hash","NavLink","className","onClick","removeItem","getSongInfo","song","artist","album","artistAvatar","coverImage","getSongsInfo","values","getPlaylistSongsInfo","getPlayingSongId","_ref3","SearchIndexItem","SearchBar","handleChange","handleSubmit","debounceSearch","debounce","e","preventDefault","flush","target","value","clearSearchResults","clear","onSubmit","placeholder","onChange","SearchBarContainer","SearchIndex","handlePlay","forward","_this2","search_bar_container","key","role","search_index_item","SearchIndexContainer","_ref$entities","LoadIcon","SongIndexItem","handleAddSong","_this$props2","playlistSongIds","addSong","_this$props3","src","alt","SongIndexItemContainer","SongIndex","handleScroll","_e$target","scrollHeight","scrollTop","clientHeight","loading_icon","onScroll","song_index_item_container","SongIndexContainer","UserPlaylistItem","loaded","onLoad","UserPlaylistIndex","play","playlist","user_playlist_item","UserPlaylistContainer","reverse","startPlaylist","isEndOfLoop","convertTime","time","minutes","seconds","getTotalAudioTime","duration","audioRef","current","totalAudioTime","updateCurrentAudioTime","seekValue","_this$audioRef$curren","currentTime","currentAudioTime","handleSeek","seekTime","isPlaying","handlePause","playAudio","pauseAudio","pause","handleVolume","newVolume","volume","handleMute","preMuteVolume","handleUnmute","updateVolume","toggleShuffle","isOnShuffle","toggleLoop","isOnLoop","event_handlers","seekSliderHandlers","playPauseHandlers","volumeHandlers","shuffleLoopHandlers","Audio","shuffle","ref","onLoadedMetadata","onDurationChange","onTimeUpdate","onVolumeChange","onPause","onPlay","onEnded","SpinningDisc","Marquee","PlayPauseButton","ForwardButton","ShuffleButton","BackwardButton","backward","SeekSlider","min","max","step","VolumeSlider","volumeButton","LoopButton","AudioPlayer","createRef","eventHandlers","_this$state","audio","spinning_disc","marquee","backward_button","play_pause_button","forward_button","shuffle_button","loop_button","volume_slider","seek_slider","AudioPlayerContainer","_session$audioPlayer","currentSong","getCurrentSongInfo","SoundWave","PlaylistIndexItem","handleRemoveSong","soundwave","PlaylistForm","newName","playlistName","handleNew","handleEdit","Date","toLocaleString","user_id","song_ids","makePlaylistData","PlaylistFormContainer","getPlaylistName","PlaylistFrom","PlaylistIndex","handleChangeSong","changeSong","stopPropagation","removeSong","playingSongId","playlist_form_container","playlist_index_item","PlaylistIndexContainer","SessionForm","password","handleDemoLogin","clearSessionErrors","field","defineProperty","processForm","formType","_this$state2","update","error","i","Link","LoginFormContainer","SignupFormContainer","About","TextAlert","text","Modal","handleClick","closeModal","closeModalTimeout","clearTimeout","setTimeout","text_alert","renderComponent","ModalContainer","nav_bar","modal_container","Switch","ErrorHandler","hasError","children","Root","store","react_redux_es","HashRouter","error_handler","app","document","addEventListener","root","getElementById","ReactDOM","components_root"],"mappings":"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","file":"static/js/main.68d6faeb.chunk.js","sourcesContent":["import * as songApiUtil from '../utils/song_utils';\n\nexport const RECEIVE_SONGS = 'RECEIVE_SONGS';\n\nexport const receiveSongs = payload => ({\n  type: RECEIVE_SONGS,\n  payload,\n});\n\nexport const fetchSomeSongs = (offSet = 0) => dispatch => songApiUtil.fetchSomeSongs(offSet)\n  .then(payload => dispatch(receiveSongs(payload)))\n  .catch(err => console.warn(err));\n","import axios from 'axios';\n\nexport const fetchSomeSongs = (offSet = 0) => (\n  axios.get(\n    `https://zing-lite-rails-api.herokuapp.com/api/songs/?off_set=${offSet}`,\n  )\n);\n\nexport const justToGoAroundLinter = () => (\n  'This does absolutely nothing'\n);\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const openModal = modal => ({\n  type: OPEN_MODAL,\n  modal,\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n});\n","import * as userPlaylistApiUtil from '../utils/user_playlist_utils';\nimport { openModal } from './modal_actions';\n\nexport const RECEIVE_USER_PLAYLISTS = 'RECEIVE_USER_PLAYLISTS';\nexport const RECEIVE_USER_PLAYLIST = 'RECEIVE_USER_PLAYLIST';\nexport const REMOVE_USER_PLAYLIST = 'REMOVE_USER_PLAYLIST';\n\nexport const receiveUserPlaylists = payload => ({\n  type: RECEIVE_USER_PLAYLISTS,\n  payload,\n});\n\nexport const receiveUserPlaylist = payload => ({\n  type: RECEIVE_USER_PLAYLIST,\n  payload,\n});\n\nexport const removeUserPlaylist = playlistId => ({\n  type: REMOVE_USER_PLAYLIST,\n  playlistId,\n});\n\nexport const fetchUserPlaylists = userId => dispatch => (\n  userPlaylistApiUtil.fetchUserPlaylists(userId)\n    .then(payload => dispatch(receiveUserPlaylists(payload)))\n    .catch(err => console.warn(err))\n);\n\nexport const createPlaylist = playlistData => dispatch => (\n  userPlaylistApiUtil.createPlaylist(playlistData)\n    .then(payload => Promise.all([\n      dispatch(receiveUserPlaylist(payload)),\n      dispatch(openModal({\n        type: 'TEXT_ALERT',\n        content: 'New playlist created!',\n      })),\n    ]))\n    .catch(err => console.warn(err))\n);\n\nexport const editPlaylist = (playlistId, playlistData) => dispatch => (\n  userPlaylistApiUtil.editPlaylist(playlistId, playlistData)\n    .then(payload => Promise.all([\n      dispatch(receiveUserPlaylist(payload)),\n      dispatch(openModal({\n        type: 'TEXT_ALERT',\n        content: 'Playlist saved!',\n      })),\n    ]))\n    .catch(err => console.warn(err))\n);\n\nexport const deleteUserPlaylist = playlistId => dispatch => (\n  userPlaylistApiUtil.deletePlaylist(playlistId)\n    .then(deletedPlaylistId => dispatch(removeUserPlaylist(deletedPlaylistId)))\n    .catch(err => console.warn(err))\n);\n","import axios from 'axios';\n\nexport const currentDate = () => new Date().toLocaleString();\n\nexport const fetchUserPlaylists = userId => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/playlists/?user_id=${userId}`,\n    method: 'get',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    withCredentials: true,\n  })\n);\n\nexport const createPlaylist = playlistData => (\n  axios.request({\n    url: 'https://zing-lite-rails-api.herokuapp.com/api/playlists',\n    method: 'post',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    data: playlistData,\n    withCredentials: true,\n  })\n);\n\nexport const editPlaylist = (playlistId, playlistData) => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/playlists/${playlistId}`,\n    method: 'patch',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    data: playlistData,\n    withCredentials: true,\n  })\n);\n\nexport const deletePlaylist = playlistId => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/playlists/${playlistId}`,\n    method: 'delete',\n    headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n    withCredentials: true,\n  })\n);\n","import { fetchDataByQuery } from '../utils/search_bar_utils';\n\nexport const RECEIVE_QUERY_DATA = 'RECEIVE_QUERY_DATA';\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\n\nexport const clearSearchResults = () => ({\n  type: CLEAR_SEARCH_RESULTS,\n});\n\nexport const receiveQueryData = payload => ({\n  type: RECEIVE_QUERY_DATA,\n  payload,\n});\n\nexport const fetchQueryData = query => dispatch => fetchDataByQuery(query)\n  .then(payload => dispatch(receiveQueryData(payload)))\n  .catch(err => console.warn(err));\n","import axios from 'axios';\n\nexport const nothing = () => (\n  'this does absolutely nothing'\n);\n\nexport const fetchDataByQuery = query => (\n  axios.request({\n    url: `https://zing-lite-rails-api.herokuapp.com/api/searches/?query=${query}`,\n    method: 'get',\n  })\n);\n","import { RECEIVE_SONGS } from '../actions/song_actions';\nimport { RECEIVE_USER_PLAYLISTS } from '../actions/user_playlist_actions';\nimport { RECEIVE_QUERY_DATA } from '../actions/search_bar_actions';\n\nconst initialState = {\n  2: {\n    id: 2,\n    title: 'Ha Trang',\n    url: 'https://www.dropbox.com/s/ezijh6nzgutwah9/HaTrang.mp3?dl=1',\n    artistId: 7,\n    albumId: 12,\n  },\n};\n\nconst songsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        ...action.payload.data.songs,\n      };\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.songs,\n      };\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        ...action.payload.data.songs,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default songsReducer;\n","import { RECEIVE_SONGS } from '../actions/song_actions';\nimport { RECEIVE_USER_PLAYLISTS } from '../actions/user_playlist_actions';\nimport { RECEIVE_QUERY_DATA } from '../actions/search_bar_actions';\n\nconst initialState = {\n  7: {\n    id: 7,\n    name: 'Quang Dung',\n    avatarUrl: 'https://www.dropbox.com/s/vcb2rfo9ohzzd62/QuangDung.jpg?dl=1',\n  },\n};\n\nconst artistsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        ...action.payload.data.artists,\n      };\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.artists,\n      };\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        ...action.payload.data.artists,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default artistsReducer;\n","import { RECEIVE_SONGS } from '../actions/song_actions';\nimport { RECEIVE_USER_PLAYLISTS } from '../actions/user_playlist_actions';\nimport { RECEIVE_QUERY_DATA } from '../actions/search_bar_actions';\n\nconst initialState = {\n  12: {\n    id: 12,\n    name: 'Goi Giac Mo Xua',\n    coverImageUrl: 'https://www.dropbox.com/s/8qz1syuymksj5kt/GoiGiacMoXua.jpg?dl=1',\n  },\n};\n\nconst albumsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        ...action.payload.data.albums,\n      };\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.albums,\n      };\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        ...action.payload.data.albums,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default albumsReducer;\n","import {\n  RECEIVE_USER_PLAYLISTS,\n  REMOVE_USER_PLAYLIST,\n  RECEIVE_USER_PLAYLIST,\n} from '../actions/user_playlist_actions';\n\nconst userPlaylistsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        ...action.payload.data.playlists,\n      };\n    case RECEIVE_USER_PLAYLIST:\n      return {\n        ...state,\n        ...action.payload.data,\n      };\n    case REMOVE_USER_PLAYLIST: {\n      const newState = { ...state };\n      delete newState[action.playlistId];\n\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userPlaylistsReducer;\n","import { RECEIVE_QUERY_DATA, CLEAR_SEARCH_RESULTS } from '../actions/search_bar_actions';\n\nconst initialState = {\n  songIds: [],\n};\n\nconst searchResultsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_QUERY_DATA:\n      return {\n        ...state,\n        songIds: action.payload.data.searchResults.songIds,\n      };\n    case CLEAR_SEARCH_RESULTS:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default searchResultsReducer;\n","import { combineReducers } from 'redux';\n\nimport songsReducer from './songs_reducer';\nimport artistsReducer from './artists_reducer';\nimport albumsReducer from './albums_reducer';\nimport userPlaylistsReducer from './user_playlists_reducer';\nimport searchResultsReducer from './search_results_reducer';\n\nconst entitiesReducer = combineReducers({\n  songs: songsReducer,\n  artists: artistsReducer,\n  albums: albumsReducer,\n  userPlaylists: userPlaylistsReducer,\n  searchResults: searchResultsReducer,\n});\n\nexport default entitiesReducer;\n","export const FORWARD = 'FORWARD';\nexport const BACKWARD = 'BACKWARD';\nexport const SHUFFLE = 'SHUFFLE';\nexport const START_PLAYLIST = 'START_PLAYLIST';\nexport const USER_CLICK_PLAY = 'USER_CLICK_PLAY';\nexport const ADD_SONG = 'ADD_SONG';\nexport const CHANGE_SONG = 'CHANGE_SONG';\nexport const REMOVE_SONG = 'REMOVE_SONG';\n\nexport const forward = () => ({\n  type: FORWARD,\n});\n\nexport const backward = () => ({\n  type: BACKWARD,\n});\n\nexport const shuffle = () => ({\n  type: SHUFFLE,\n});\n\nexport const startPlaylist = (songIds, playlistId) => ({\n  type: START_PLAYLIST,\n  songIds,\n  playlistId,\n});\n\nexport const userClickPlay = songId => ({\n  type: USER_CLICK_PLAY,\n  songId,\n});\n\nexport const addSong = songId => ({\n  type: ADD_SONG,\n  songId,\n});\n\nexport const changeSong = songId => ({\n  type: CHANGE_SONG,\n  songId,\n});\n\nexport const removeSong = songId => ({\n  type: REMOVE_SONG,\n  songId,\n});\n","const getPlayedSongIndices = (playedSongIndices, playingSongIndex, songIds) => {\n  let newPlayedSongIndices = [...playedSongIndices];\n\n  if (!playedSongIndices.includes(playingSongIndex)) {\n    newPlayedSongIndices = [...playedSongIndices, playingSongIndex];\n  }\n  if (newPlayedSongIndices.length === songIds.length) {\n    newPlayedSongIndices = [];\n  }\n\n  return newPlayedSongIndices;\n};\n\nexport const forwardLogic = (state) => {\n  const { songIds, playingSongIndex, playedSongIndices } = state;\n\n  let newPlayingSongIndex = playingSongIndex + 1;\n  if (newPlayingSongIndex > songIds.length - 1) {\n    newPlayingSongIndex = 0;\n  }\n\n  const newPlayedSongIndices = getPlayedSongIndices(\n    playedSongIndices, playingSongIndex, songIds,\n  );\n\n  return {\n    ...state,\n    playingSongIndex: newPlayingSongIndex,\n    prevSongIndex: playingSongIndex,\n    playedSongIndices: newPlayedSongIndices,\n  };\n};\n\nexport const backwardLogic = (state) => {\n  const { songIds, playingSongIndex, playedSongIndices, prevSongIndex } = state;\n\n  let newPrevSongIndex = prevSongIndex - 1;\n  if (newPrevSongIndex < 0) {\n    newPrevSongIndex = songIds.length - 1;\n  }\n\n  const newPlayedSongIndices = getPlayedSongIndices(\n    playedSongIndices, playingSongIndex, songIds,\n  );\n\n  return {\n    ...state,\n    playingSongIndex: prevSongIndex,\n    prevSongIndex: newPrevSongIndex,\n    playedSongIndices: newPlayedSongIndices,\n  };\n};\n\nexport const shuffleLogic = (state) => {\n  const { songIds, playedSongIndices, playingSongIndex } = state;\n\n  const history = [...playedSongIndices, playingSongIndex];\n\n  const nextSongIndices = songIds.map((_, index) => index)\n    .filter(index => !history.includes(index));\n\n  let nextSongIndex;\n  if (nextSongIndices.length === 0) {\n    nextSongIndex = Math.floor(Math.random() * songIds.length);\n  } else if (nextSongIndices.length === 1) {\n    [nextSongIndex] = nextSongIndices;\n  } else {\n    nextSongIndex = nextSongIndices[Math.floor(Math.random() * nextSongIndices.length)];\n  }\n\n  const newPlayedSongIndices = getPlayedSongIndices(\n    playedSongIndices, playingSongIndex, songIds,\n  );\n\n  return {\n    ...state,\n    playingSongIndex: nextSongIndex,\n    prevSongIndex: playingSongIndex,\n    playedSongIndices: newPlayedSongIndices,\n  };\n};\n\nexport const removeSongLogic = (state, action) => {\n  const { songIds, playingSongIndex, playedSongIndices } = state;\n\n  if (songIds.length === 1) return state;\n\n  const removeSongIndex = songIds.indexOf(action.songId);\n\n  const newSongIds = songIds.filter(id => id !== action.songId);\n  const newPlayedSongIndices = playedSongIndices.filter(index => index !== playingSongIndex);\n\n  let newPlayingSongIndex;\n\n  if (removeSongIndex > playingSongIndex) {\n    newPlayingSongIndex = playingSongIndex;\n  } else if (removeSongIndex <= playingSongIndex) {\n    newPlayingSongIndex = playingSongIndex - 1;\n\n    if (newPlayingSongIndex < 0) newPlayingSongIndex = 0;\n  }\n\n  return {\n    ...state,\n    songIds: newSongIds,\n    playedSongIndices: newPlayedSongIndices,\n    playingSongIndex: newPlayingSongIndex,\n  };\n};\n","import * as APIUtils from '../utils/session_utils';\n\nexport const RECEIVE_USER_LOGOUT = 'RECEIVE_USER_LOGOUT';\nexport const RECEIVE_CURRENT_USER = 'RECEIVE_CURRENT_USER';\nexport const RECEIVE_SESSION_ERRORS = 'RECEIVE_SESSION_ERRORS';\nexport const CLEAR_SESSION_ERRORS = 'CLEAR_SESSION_ERRORS';\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser,\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT,\n});\n\nexport const receiveSessionErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors,\n});\n\nexport const clearSessionErrors = () => ({\n  type: CLEAR_SESSION_ERRORS,\n});\n\nconst processServerRes = (res) => {\n  const user = { userId: res.data.id, username: res.data.username };\n\n  sessionStorage.setItem('CSRF-TOKEN', res.data.csrfToken);\n  sessionStorage.setItem('username', user.username);\n  sessionStorage.setItem('userId', user.userId);\n\n  return user;\n};\n\nexport const login = user => dispatch => APIUtils.login(user)\n  .then(res => dispatch(\n    receiveCurrentUser(processServerRes(res)),\n  ))\n  .catch(err => dispatch(receiveSessionErrors(err.response.data)));\n\nexport const signup = user => dispatch => APIUtils.signup(user)\n  .then(res => dispatch(\n    receiveCurrentUser(processServerRes(res)),\n  ))\n  .catch(err => dispatch(receiveSessionErrors(err.response.data)));\n\nexport const logout = () => (dispatch) => {\n  sessionStorage.removeItem('CSRF-TOKEN');\n  sessionStorage.removeItem('username');\n  sessionStorage.removeItem('userId');\n  dispatch(logoutUser());\n};\n","import axios from 'axios';\n\nexport const signup = userData => axios.request({\n  url: 'https://zing-lite-rails-api.herokuapp.com/api/users',\n  method: 'post',\n  headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n  data: userData,\n  withCredentials: true,\n});\n\nexport const login = userData => axios.request({\n  url: 'https://zing-lite-rails-api.herokuapp.com/api/session',\n  method: 'post',\n  headers: { 'X-CSRF-Token': sessionStorage.getItem('CSRF-TOKEN') },\n  data: userData,\n  withCredentials: true,\n});\n","import {\n  FORWARD,\n  BACKWARD,\n  SHUFFLE,\n  USER_CLICK_PLAY,\n  ADD_SONG,\n  CHANGE_SONG,\n  REMOVE_SONG,\n  START_PLAYLIST,\n} from '../actions/audio_player_actions';\n\nimport {\n  forwardLogic,\n  backwardLogic,\n  shuffleLogic,\n  removeSongLogic,\n} from '../utils/audio_player_utils';\nimport { RECEIVE_USER_LOGOUT } from '../actions/session_actions';\nimport { RECEIVE_USER_PLAYLIST } from '../actions/user_playlist_actions';\n\n\nconst initialState = {\n  playingSongIndex: 0,\n  songIds: [2],\n  prevSongIndex: 0,\n  playedSongIndices: [],\n  currentPlaylist: 0,\n};\n\nconst audioPlayerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FORWARD: {\n      const newState = forwardLogic(state);\n      return newState;\n    }\n    case BACKWARD: {\n      const newState = backwardLogic(state);\n      return newState;\n    }\n    case SHUFFLE: {\n      const newState = shuffleLogic(state);\n      return newState;\n    }\n    case USER_CLICK_PLAY: {\n      const { songIds, playingSongIndex } = state;\n      let newSongIds = songIds.slice();\n\n      // remove song if repeated\n      newSongIds = newSongIds.filter(id => id !== action.songId);\n      newSongIds = [\n        ...newSongIds.slice(0, playingSongIndex + 1),\n        action.songId,\n        ...newSongIds.slice(playingSongIndex + 2, newSongIds.length),\n      ];\n\n      return {\n        ...state,\n        songIds: newSongIds,\n      };\n    }\n    case ADD_SONG: {\n      return {\n        ...state,\n        songIds: [\n          ...state.songIds,\n          action.songId,\n        ],\n      };\n    }\n    case CHANGE_SONG: {\n      return {\n        ...state,\n        playingSongIndex: state.songIds.indexOf(action.songId),\n      };\n    }\n    case REMOVE_SONG: {\n      const newState = removeSongLogic(state, action);\n      return newState;\n    }\n    case START_PLAYLIST: {\n      return {\n        ...initialState,\n        songIds: action.songIds,\n        currentPlaylist: action.playlistId,\n      };\n    }\n    case RECEIVE_USER_PLAYLIST: {\n      return {\n        ...state,\n        currentPlaylist: parseInt(Object.keys(action.payload.data)[0], 10),\n      };\n    }\n    case RECEIVE_USER_LOGOUT: {\n      return initialState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default audioPlayerReducer;\n","import { RECEIVE_CURRENT_USER, RECEIVE_USER_LOGOUT } from '../actions/session_actions';\n\nconst initialState = {\n  id: null,\n  username: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return action.currentUser;\n    case RECEIVE_USER_LOGOUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\n\nimport audioPlayerReducer from './audio_player_reducer';\nimport userReducer from './user_reducer';\n\nconst sessionReducer = combineReducers({\n  audioPlayer: audioPlayerReducer,\n  user: userReducer,\n});\n\nexport default sessionReducer;\n","import {\n  RECEIVE_SESSION_ERRORS,\n  RECEIVE_CURRENT_USER,\n  CLEAR_SESSION_ERRORS,\n} from '../actions/session_actions';\n\nconst sessionErrorsReducer = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return action.errors;\n    case CLEAR_SESSION_ERRORS:\n      return [];\n    case RECEIVE_CURRENT_USER:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default sessionErrorsReducer;\n","import { combineReducers } from 'redux';\n\nimport sessionErrorsReducer from './session_errors_reducer';\n\nconst errorsReducer = combineReducers({\n  session: sessionErrorsReducer,\n});\n\nexport default errorsReducer;\n","import { RECEIVE_SONGS } from '../actions/song_actions';\nimport { RECEIVE_USER_PLAYLISTS } from '../actions/user_playlist_actions';\n\nconst initialState = {\n  homePage: true,\n  profilePage: true,\n};\n\nconst loadingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        homePage: false,\n      };\n    case RECEIVE_USER_PLAYLISTS:\n      return {\n        ...state,\n        profilePage: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","import { OPEN_MODAL, CLOSE_MODAL } from '../actions/modal_actions';\n\nconst initialState = {\n  type: 'hidden',\n  content: '',\n};\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return action.modal;\n    case CLOSE_MODAL:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import { combineReducers } from 'redux';\n\nimport loadingReducer from './ui_loading_reducer';\nimport modalReducer from './modal_reducer';\n\nconst uiReducer = combineReducers({\n  loading: loadingReducer,\n  modal: modalReducer,\n});\n\nexport default uiReducer;\n","import { combineReducers } from 'redux';\n\nimport entitiesReducer from './entities_reducer';\nimport sessionReducer from './session_reducer';\nimport errorsReducer from './errors_reducer';\nimport uiReducer from './ui_reducer';\n\n\nconst rootReducer = combineReducers({\n  entities: entitiesReducer,\n  session: sessionReducer,\n  errors: errorsReducer,\n  ui: uiReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => createStore(\n  rootReducer,\n  preloadedState,\n  applyMiddleware(thunk, logger),\n);\n\n\nexport default configureStore;\n","export const isLoggedIn = ({ session }) => (\n  Boolean(session.user.userId)\n);\n\nexport const isLoggedOut = ({ session }) => (\n  !session.user.userId\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Route, Redirect } from 'react-router-dom';\n\nimport { isLoggedIn } from '../selectors/session_selectors';\n\nconst Auth = ({\n  component: Component, path, loggedIn, exact,\n}) => (\n  <Route\n    path={path}\n    exact={exact}\n    render={props => (\n      !loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/profile\" />\n      )\n    )}\n  />\n);\n\nconst Protected = ({ toPath, component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/profile/login\" />\n      )\n    )}\n  />\n);\n\nconst mapStateToProps = state => ({ loggedIn: isLoggedIn(state) });\n\nexport const AuthRoute = withRouter(connect(mapStateToProps, null)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps, null)(Protected));\n","import React from 'react';\nimport { func, number } from 'prop-types';\n\nclass RootPage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = ({\n      hasFetchedPlaylist: false,\n    });\n  }\n\n  componentDidMount() {\n    const { fetchSomeSongs, fetchUserPlaylists, userId } = this.props;\n    const { hasFetchedPlaylist } = this.state;\n\n    fetchSomeSongs(0);\n\n    if (userId && !hasFetchedPlaylist) {\n      fetchUserPlaylists(userId);\n      this.setState({ hasFetchedPlaylist: true });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { fetchUserPlaylists, userId } = nextProps;\n    const { hasFetchedPlaylist } = this.state;\n\n    if (userId && !hasFetchedPlaylist) {\n      fetchUserPlaylists(userId);\n      this.setState({ hasFetchedPlaylist: true });\n    }\n  }\n\n  render() {\n    return <></>;\n  }\n}\n\nRootPage.defaultProps = {\n  userId: null,\n};\n\nRootPage.propTypes = {\n  userId: number,\n  fetchSomeSongs: func.isRequired,\n  fetchUserPlaylists: func.isRequired,\n};\n\nexport default RootPage;\n","import { connect } from 'react-redux';\nimport { fetchSomeSongs } from '../../actions/song_actions';\nimport { fetchUserPlaylists } from '../../actions/user_playlist_actions';\n\nimport RootPage from './root_page';\n\nconst mapStateToProps = ({ session }) => ({\n  userId: session.user.userId,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  fetchSomeSongs: offSet => dispatch(fetchSomeSongs(offSet)),\n  fetchUserPlaylists: userId => dispatch(fetchUserPlaylists(userId)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchtoProps,\n)(RootPage);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { func, bool } from 'prop-types';\n\nimport * as SessionActions from '../../actions/session_actions';\n\nconst activeStyle = {\n  textDecoration: 'underline',\n  backgroundColor: 'rgba(192, 108, 132, 1)',\n};\n\nclass NavBar extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    const { logout } = this.props;\n    logout();\n    window.location.hash = '/home';\n  }\n\n  render() {\n    const { isLoggedIn } = this.props;\n\n    return (\n      <>\n        <NavLink to=\"/home\" className=\"Nav-Home\" activeStyle={activeStyle}>\n          Home\n        </NavLink>\n\n        <NavLink to=\"/playlist/\" className=\"Nav-Playlist\" activeStyle={activeStyle}>\n          Playlist\n        </NavLink>\n\n        <NavLink to=\"/about\" className=\"Nav-About\" activeStyle={activeStyle}>\n          About\n        </NavLink>\n\n        <NavLink to=\"/search\" className=\"Nav-Search\" activeStyle={activeStyle}>\n          Search\n        </NavLink>\n\n        <NavLink to=\"/profile\" className=\"Nav-Profile\" activeStyle={activeStyle}>\n          Profile\n        </NavLink>\n\n        <button\n          className={`Nav-Logout ${!isLoggedIn && 'Nav-Logout-loggedOut'}`}\n          type=\"button\"\n          onClick={this.handleLogout}\n        >\n          Logout\n        </button>\n      </>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  logout: func.isRequired,\n  isLoggedIn: bool.isRequired,\n};\n\nconst mapStateToProps = ({ session }) => ({\n  isLoggedIn: Boolean(session.user.userId),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(SessionActions.logout()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar));\n","export const getSongInfo = (song, artists, albums) => {\n  if (!song) return {};\n\n  const artist = artists[song.artistId];\n  const album = albums[song.albumId];\n\n  return {\n    id: song.id,\n    title: song.title,\n    url: song.url,\n    artist: artist.name,\n    artistAvatar: artist.avatarUrl,\n    album: album.name,\n    coverImage: album.coverImageUrl,\n  };\n};\n\nexport const getSongsInfo = ({ entities }) => {\n  const { songs, artists, albums } = entities;\n\n  return Object.values(songs).map(song => (\n    getSongInfo(song, artists, albums)\n  ));\n};\n\nexport const getPlaylistSongsInfo = ({ entities, session: { audioPlayer } }) => {\n  const { songs, artists, albums } = entities;\n\n  return audioPlayer.songIds.map(\n    songId => getSongInfo(songs[songId], artists, albums),\n  );\n};\n\nexport const getPlayingSongId = ({ session: { audioPlayer } }) => {\n  const { songIds, playingSongIndex } = audioPlayer;\n  return songIds[playingSongIndex];\n};\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst SearchIndexItem = (props) => {\n  const {\n    title,\n    artist,\n    album,\n  } = props;\n\n  return (\n    <>\n      <h4>{title}</h4>\n      <h5>{`${artist} - ${album}`}</h5>\n    </>\n  );\n};\n\nSearchIndexItem.propTypes = {\n  title: string.isRequired,\n  artist: string.isRequired,\n  album: string.isRequired,\n};\n\nexport default SearchIndexItem;\n","import React from 'react';\nimport { func } from 'prop-types';\nimport { debounce } from 'debounce';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { query: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.debounceSearch = debounce(query => props.fetchQueryData(query), 500);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.debounceSearch.flush();\n    this.setState({ query: '' });\n  }\n\n  handleChange(e) {\n    this.setState({\n      query: e.target.value,\n    });\n\n    const { clearSearchResults } = this.props;\n    const query = e.target.value;\n\n    if (query && query !== '') {\n      this.debounceSearch(query);\n    } else {\n      this.debounceSearch.clear();\n      clearSearchResults();\n    }\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <form className=\"Input-Form\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"Input-Form__Input\"\n          type=\"text\"\n          placeholder=\"Search for songs here...\"\n          value={query}\n          onChange={this.handleChange}\n        />\n\n        <div className=\"Input-Form__Buttons\">\n          <button type=\"button\" onClick={this.handleSubmit}>\n            <h6>Search</h6>\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  fetchQueryData: func.isRequired,\n  clearSearchResults: func.isRequired,\n};\n\nexport default SearchBar;\n","import { connect } from 'react-redux';\nimport SearchBar from './search_bar';\nimport { fetchQueryData, clearSearchResults } from '../../actions/search_bar_actions';\n\nconst mapDispatchToProps = dispatch => ({\n  fetchQueryData: query => dispatch(fetchQueryData(query)),\n  clearSearchResults: () => dispatch(clearSearchResults()),\n});\n\nconst SearchBarContainer = connect(\n  null,\n  mapDispatchToProps,\n)(SearchBar);\n\nexport default SearchBarContainer;\n","import React from 'react';\nimport { shape, arrayOf, number, string, func } from 'prop-types';\n\nimport SearchIndexItem from './search_index_item';\nimport SearchBarContainer from './search_bar_container';\n\nclass SearchIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  handlePlay(songId) {\n    const { userClickPlay, forward } = this.props;\n    return () => {\n      userClickPlay(songId);\n      forward();\n    };\n  }\n\n  render() {\n    const { songs } = this.props;\n\n    return (\n      <>\n        <SearchBarContainer />\n\n        <ul className=\"Col-List\">\n          {songs.map(song => (\n            <li\n              className=\"Col-List__Item\"\n              key={song.id}\n              role=\"presentation\"\n              onClick={this.handlePlay(song.id)}\n            >\n              <SearchIndexItem\n                {...song}\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nSearchIndex.propTypes = {\n  userClickPlay: func.isRequired,\n  forward: func.isRequired,\n  songs: arrayOf(shape({\n    id: number,\n    title: string,\n    url: string,\n    artist: string,\n    artistAvatar: string,\n    album: string,\n    coverImage: string,\n  })).isRequired,\n};\n\nexport default SearchIndex;\n","import { connect } from 'react-redux';\n\nimport { getSongInfo } from '../../selectors/song_selectors';\n\nimport SearchIndex from './search_index';\nimport { forward, userClickPlay } from '../../actions/audio_player_actions';\n\nconst mapStateToProps = ({ entities: { songs, artists, albums, searchResults } }) => ({\n  songs: searchResults.songIds.map(\n    songId => getSongInfo(songs[songId], artists, albums),\n  ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  forward: () => dispatch(forward()),\n  userClickPlay: songId => dispatch(userClickPlay(songId)),\n});\n\nconst SearchIndexContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchIndex);\n\nexport default SearchIndexContainer;\n","import React from 'react';\nimport { bool } from 'prop-types';\n\nconst LoadIcon = ({ loading }) => (\n  loading ? (\n    <div className=\"load-icon\" />\n  ) : null\n);\n\nLoadIcon.propTypes = {\n  loading: bool.isRequired,\n};\n\nexport default LoadIcon;\n","import React from 'react';\nimport { number, string, func, arrayOf } from 'prop-types';\n\nclass SongIndexItem extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleAddSong = this.handleAddSong.bind(this);\n  }\n\n  handlePlay() {\n    const { id, userClickPlay, forward } = this.props;\n    userClickPlay(id);\n    forward();\n  }\n\n  handleAddSong() {\n    const { id, playlistSongIds, addSong, openModal } = this.props;\n    if (playlistSongIds.includes(id)) {\n      openModal({\n        type: 'TEXT_ALERT',\n        content: 'Song already in playlist!',\n      });\n      return;\n    }\n\n    addSong(id);\n\n    openModal({\n      type: 'TEXT_ALERT',\n      content: 'Song added to current playlist!',\n    });\n  }\n\n  render() {\n    const { title, artist, coverImage } = this.props;\n\n    return (\n      <div className=\"image-wrapper\">\n        <figure>\n          <img\n            src={coverImage}\n            alt={title}\n          />\n\n          <button type=\"button\" onClick={this.handlePlay}>\n            <i className=\"far fa-play-circle fade\" />\n          </button>\n        </figure>\n\n        <h5\n          className=\"image-wrapper__title\"\n          title=\"Add song to current playlist\"\n          role=\"presentation\"\n          onClick={this.handleAddSong}\n        >\n          {title}\n        </h5>\n\n        <h5 className=\"image-wrapper__artist\">{artist}</h5>\n      </div>\n    );\n  }\n}\n\nSongIndexItem.propTypes = {\n  id: number.isRequired,\n  title: string.isRequired,\n  artist: string.isRequired,\n  coverImage: string.isRequired,\n  addSong: func.isRequired,\n  userClickPlay: func.isRequired,\n  forward: func.isRequired,\n  openModal: func.isRequired,\n  playlistSongIds: arrayOf(number).isRequired,\n};\n\nexport default SongIndexItem;\n","import { connect } from 'react-redux';\n\nimport { forward, addSong, userClickPlay } from '../../actions/audio_player_actions';\nimport { openModal } from '../../actions/modal_actions';\n\nimport SongIndexItem from './song_index_item';\n\nconst mapStateToProps = ({ session: { audioPlayer } }) => ({\n  playlistSongIds: audioPlayer.songIds,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  forward: () => dispatch(forward()),\n  addSong: songId => dispatch(addSong(songId)),\n  userClickPlay: songId => dispatch(userClickPlay(songId)),\n  openModal: modal => dispatch(openModal(modal)),\n});\n\nconst SongIndexItemContainer = connect(\n  mapStateToProps,\n  mapDispatchtoProps,\n)(SongIndexItem);\n\n\nexport default SongIndexItemContainer;\n","import React from 'react';\nimport { func, arrayOf, shape, number, string, bool } from 'prop-types';\n\nimport LoadIcon from '../utils/loading_icon';\nimport SongIndexItemContainer from './song_index_item_container';\n\nclass SongIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { offSet: 20 };\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleScroll(e) {\n    const { offSet } = this.state;\n    if (offSet > 35) return;\n\n    const { fetchSomeSongs } = this.props;\n    const { scrollHeight, scrollTop, clientHeight } = e.target;\n\n    if (scrollHeight - scrollTop <= clientHeight + 1) {\n      fetchSomeSongs(offSet);\n      this.setState(state => ({\n        offSet: state.offSet + 20,\n      }));\n    }\n  }\n\n  render() {\n    const { songs, loading } = this.props;\n\n    return !loading\n      ? (\n        <ul className=\"Row-List\" onScroll={this.handleScroll}>\n          {songs.map(song => (\n            <li className=\"Row-List__Item song-index-item\" key={song.id}>\n              <SongIndexItemContainer {...song} />\n            </li>\n          ))}\n        </ul>\n      )\n      : <LoadIcon loading={loading} />;\n  }\n}\n\nSongIndex.propTypes = {\n  fetchSomeSongs: func.isRequired,\n  userClickPlay: func.isRequired,\n  forward: func.isRequired,\n  loading: bool.isRequired,\n  songs: arrayOf(shape({\n    id: number,\n    title: string,\n    url: string,\n    artist: string,\n    artistAvatar: string,\n    album: string,\n    coverImage: string,\n  })).isRequired,\n};\n\nexport default SongIndex;\n","import { connect } from 'react-redux';\n\nimport { fetchSomeSongs } from '../../actions/song_actions';\nimport { getSongsInfo } from '../../selectors/song_selectors';\nimport { forward, userClickPlay } from '../../actions/audio_player_actions';\n\nimport SongIndex from './song_index';\n\nconst mapStateToProps = state => ({\n  songs: getSongsInfo(state),\n  loading: state.ui.loading.homePage,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  fetchSomeSongs: offSet => dispatch(fetchSomeSongs(offSet)),\n  forward: () => dispatch(forward()),\n  userClickPlay: songId => dispatch(userClickPlay(songId)),\n});\n\nconst SongIndexContainer = connect(\n  mapStateToProps,\n  mapDispatchtoProps,\n)(SongIndex);\n\n\nexport default SongIndexContainer;\n","import React from 'react';\nimport { string, func, arrayOf, number } from 'prop-types';\n\nclass UserPlaylistItem extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { loaded: false };\n    this.loaded = this.loaded.bind(this);\n  }\n\n  loaded() {\n    this.setState({ loaded: true });\n  }\n\n  render() {\n    const { name, coverImageUrl, handlePlay, songIds, id } = this.props;\n    const { loaded } = this.state;\n\n    return (\n      <div className=\"image-wrapper\">\n        <figure>\n          <img\n            className={`profile__playlist__image${loaded ? '--loaded' : ''}`}\n            src={coverImageUrl}\n            onLoad={this.loaded}\n            alt={name}\n          />\n\n          <button type=\"button\" onClick={handlePlay(songIds, id)}>\n            <i className=\"far fa-play-circle\" />\n          </button>\n        </figure>\n\n        <h5 className=\"profile__playlist__name\">{name}</h5>\n      </div>\n    );\n  }\n}\n\nUserPlaylistItem.propTypes = {\n  id: number.isRequired,\n  name: string.isRequired,\n  coverImageUrl: string.isRequired,\n  handlePlay: func.isRequired,\n  songIds: arrayOf(number).isRequired,\n};\n\nexport default UserPlaylistItem;\n","import React from 'react';\nimport { shape, string, number, arrayOf, func, bool } from 'prop-types';\nimport UserPlaylistItem from './user_playlist_item';\nimport LoadIcon from '../utils/loading_icon';\n\nclass UserPlaylistIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  handlePlay(songIds, playlistId) {\n    const { play } = this.props;\n    return () => {\n      play(songIds, playlistId);\n      window.location.hash = '/playlist';\n    };\n  }\n\n  render() {\n    const { user, userPlaylists, loading } = this.props;\n\n    return !loading ? (\n      <>\n        <h4 className=\"profile__playlist__header\">\n          <span>{`Hi, ${user.username}! Below are your personal playlists`}</span>\n        </h4>\n\n        <ul className=\"Row-List profile__playlist\">\n          {userPlaylists.map(playlist => (\n            <li className=\"Row-List__Item\" key={playlist.id}>\n              <UserPlaylistItem\n                {...playlist}\n                userId={user.userId}\n                handlePlay={this.handlePlay}\n                loading\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    ) : <LoadIcon loading={loading} />;\n  }\n}\n\nUserPlaylistIndex.propTypes = {\n  loading: bool.isRequired,\n  userPlaylists: arrayOf(shape({\n    id: number,\n    name: string,\n    songIds: arrayOf(number),\n  })).isRequired,\n  user: shape({\n    username: string,\n    userId: number,\n  }).isRequired,\n  play: func.isRequired,\n};\n\nexport default UserPlaylistIndex;\n","import { connect } from 'react-redux';\n\nimport UserPlaylistIndex from './user_playlist_index';\nimport { startPlaylist } from '../../actions/audio_player_actions';\n\nconst mapStateToProps = ({ entities, session, ui }) => ({\n  userPlaylists: Object.values(entities.userPlaylists).reverse(),\n  user: session.user,\n  loading: ui.loading.profilePage,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  play: (songIds, playlistId) => dispatch(startPlaylist(songIds, playlistId)),\n});\n\nconst UserPlaylistContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPlaylistIndex);\n\nexport default UserPlaylistContainer;\n","import { getSongInfo } from './song_selectors';\n\nexport const getCurrentSongInfo = ({ entities, session }) => {\n  const { songs, artists, albums } = entities;\n  const { audioPlayer: { songIds, playingSongIndex } } = session;\n\n  const playingSongId = songIds[playingSongIndex];\n  const currentSong = songs[playingSongId];\n\n  return getSongInfo(currentSong, artists, albums);\n};\n\nexport const isEndOfLoop = ({ session: { audioPlayer } }) => {\n  const { songIds, playedSongIndices } = audioPlayer;\n\n  return songIds.length - 1 === playedSongIndices.length;\n};\n","const convertTime = (time) => {\n  const minutes = Math.floor(time / 60);\n\n  let seconds = Math.floor(time - minutes * 60);\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n\n  return `${minutes}:${seconds}`;\n};\n\nexport function getTotalAudioTime() {\n  const { duration } = this.audioRef.current;\n\n  this.setState({\n    totalAudioTime: convertTime(duration),\n  });\n}\n\nexport function updateCurrentAudioTime() {\n  const { duration, currentTime } = this.audioRef.current;\n\n  let seekValue;\n  if (!duration) {\n    seekValue = 0;\n  } else {\n    seekValue = (currentTime / duration * 100);\n  }\n\n  this.setState({\n    currentAudioTime: convertTime(currentTime),\n    seekValue,\n  });\n}\n\nexport function handleSeek(e) {\n  const { duration } = this.audioRef.current;\n\n  const seekTime = duration * (e.target.value / 100);\n  this.audioRef.current.currentTime = seekTime;\n}\n","export function handlePlay() {\n  this.setState({ isPlaying: true });\n}\n\nexport function handlePause() {\n  this.setState({ isPlaying: false });\n}\n\nexport function playAudio() {\n  this.audioRef.current.play()\n    .catch(err => console.warn(err));\n}\n\nexport function pauseAudio() {\n  this.audioRef.current.pause();\n}\n","export function handleVolume(e) {\n  const newVolume = e.target.value / 100;\n  this.audioRef.current.volume = newVolume;\n}\n\nexport function handleMute() {\n  const { volume } = this.audioRef.current;\n\n  this.setState({\n    preMuteVolume: volume * 100,\n  });\n\n  this.audioRef.current.volume = 0;\n}\n\nexport function handleUnmute(preMuteVolume) {\n  return () => { this.audioRef.current.volume = preMuteVolume / 100; };\n}\n\nexport function updateVolume() {\n  const { volume } = this.audioRef.current;\n  this.setState({\n    volume: volume * 100,\n  });\n}\n","export function toggleShuffle(isOnShuffle) {\n  return () => {\n    this.setState({ isOnShuffle: !isOnShuffle });\n  };\n}\n\nexport function toggleLoop(isOnLoop) {\n  return () => {\n    this.setState({ isOnLoop: !isOnLoop });\n  };\n}\n","import * as seekSliderHandlers from './seek_slider';\nimport * as playPauseHandlers from './play_pause_button';\nimport * as volumeHandlers from './volume_slider';\nimport * as shuffleLoopHandlers from './shuffle_loop_button';\n\nexport default {\n  ...seekSliderHandlers,\n  ...playPauseHandlers,\n  ...volumeHandlers,\n  ...shuffleLoopHandlers,\n};\n","import React from 'react';\nimport {\n  bool, string, func, shape, instanceOf,\n} from 'prop-types';\n\nconst Audio = (props) => {\n  const {\n    audioRef,\n    url,\n    isPlaying,\n    isEndOfLoop,\n    isOnLoop,\n    isOnShuffle,\n    forward,\n    shuffle,\n    getTotalAudioTime,\n    updateCurrentAudioTime,\n    updateVolume,\n    handlePause,\n    handlePlay,\n    playAudio,\n  } = props;\n\n  const handleEnd = () => {\n    if (isEndOfLoop && !isOnLoop) {\n      return;\n    }\n\n    if (isOnShuffle) {\n      shuffle();\n    } else {\n      forward();\n    }\n  };\n\n  const handleDurationChange = () => {\n    if (isPlaying) {\n      playAudio();\n    }\n  };\n\n  return (\n    <audio\n      src={url}\n      ref={audioRef}\n      onLoadedMetadata={getTotalAudioTime}\n      onDurationChange={handleDurationChange}\n      onTimeUpdate={updateCurrentAudioTime}\n      onVolumeChange={updateVolume}\n      onPause={handlePause}\n      onPlay={handlePlay}\n      onEnded={handleEnd}\n    />\n  );\n};\n\nAudio.propTypes = {\n  audioRef: shape({ current: instanceOf(Element) }).isRequired,\n  url: string.isRequired,\n  isPlaying: bool.isRequired,\n  isEndOfLoop: bool.isRequired,\n  isOnLoop: bool.isRequired,\n  isOnShuffle: bool.isRequired,\n  forward: func.isRequired,\n  shuffle: func.isRequired,\n  getTotalAudioTime: func.isRequired,\n  updateCurrentAudioTime: func.isRequired,\n  updateVolume: func.isRequired,\n  handlePause: func.isRequired,\n  handlePlay: func.isRequired,\n  playAudio: func.isRequired,\n};\n\nexport default Audio;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst SpinningDisc = (props) => {\n  const { album, coverImage } = props;\n\n  return (\n    <figure className=\"SpinningDisc\">\n      <img src={coverImage} alt={album} />\n    </figure>\n  );\n};\n\nSpinningDisc.propTypes = {\n  album: string.isRequired,\n  coverImage: string.isRequired,\n};\n\nexport default SpinningDisc;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst Marquee = (props) => {\n  const { title, artist, artistAvatar } = props;\n\n  return (\n    <div className=\"Marquee\">\n      <p>\n        <img\n          src={artistAvatar}\n          alt={artist}\n        />\n        <span>{`${title} - ${artist}`}</span>\n      </p>\n    </div>\n  );\n};\n\nMarquee.propTypes = {\n  title: string.isRequired,\n  artist: string.isRequired,\n  artistAvatar: string.isRequired,\n};\n\nexport default Marquee;\n","import React from 'react';\nimport { bool, func } from 'prop-types';\n\nconst PlayPauseButton = (props) => {\n  const { isPlaying, playAudio, pauseAudio } = props;\n\n  return (\n    isPlaying ? (\n      <button type=\"button\" onClick={pauseAudio}>\n        <i className=\"far fa-pause-circle active\" />\n      </button>\n    ) : (\n      <button type=\"button\" onClick={playAudio}>\n        <i className=\"far fa-play-circle\" />\n      </button>\n    )\n  );\n};\n\nPlayPauseButton.propTypes = {\n  isPlaying: bool.isRequired,\n  playAudio: func.isRequired,\n  pauseAudio: func.isRequired,\n};\n\nexport default PlayPauseButton;\n","import React from 'react';\nimport { func } from 'prop-types';\n\nconst ForwardButton = (props) => {\n  const { forward } = props;\n\n  return (\n    <button type=\"button\" onClick={forward}>\n      <i className=\"fas fa-step-forward\" />\n    </button>\n  );\n};\n\nForwardButton.propTypes = {\n  forward: func.isRequired,\n};\n\nexport default ForwardButton;\n","import React from 'react';\nimport { func, bool } from 'prop-types';\n\nconst ShuffleButton = (props) => {\n  const { isOnShuffle, toggleShuffle } = props;\n\n  return (\n    <button type=\"button\" onClick={toggleShuffle(isOnShuffle)}>\n      <i className={`fas fa-random ${isOnShuffle && 'active'}`} />\n    </button>\n  );\n};\n\nShuffleButton.propTypes = {\n  isOnShuffle: bool.isRequired,\n  toggleShuffle: func.isRequired,\n};\n\nexport default ShuffleButton;\n","import React from 'react';\nimport { func } from 'prop-types';\n\nconst BackwardButton = (props) => {\n  const { backward } = props;\n\n  return (\n    <button type=\"button\" onClick={backward}>\n      <i className=\"fas fa-step-backward\" />\n    </button>\n  );\n};\n\nBackwardButton.propTypes = {\n  backward: func.isRequired,\n};\n\nexport default BackwardButton;\n","import React from 'react';\nimport { func, string, number } from 'prop-types';\n\nconst SeekSlider = (props) => {\n  const {\n    seekValue, handleSeek, currentAudioTime, totalAudioTime,\n  } = props;\n\n  return (\n    <div className=\"SeekSlider\">\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"1\"\n        value={seekValue}\n        onChange={handleSeek}\n      />\n\n      <p>{`${currentAudioTime}/${totalAudioTime}`}</p>\n    </div>\n  );\n};\n\nSeekSlider.propTypes = {\n  seekValue: number.isRequired,\n  handleSeek: func.isRequired,\n  currentAudioTime: string.isRequired,\n  totalAudioTime: string.isRequired,\n};\n\nexport default SeekSlider;\n","import React from 'react';\nimport { number, func } from 'prop-types';\n\nconst VolumeSlider = (props) => {\n  const {\n    volume,\n    preMuteVolume,\n    handleMute,\n    handleUnmute,\n  } = props;\n\n  let volumeButton;\n  if (volume === 0) {\n    volumeButton = (\n      <button type=\"button\" className=\"volume-button\" onClick={handleUnmute(preMuteVolume)}>\n        <i className=\"fas fa-volume-mute\" />\n      </button>\n    );\n  } else {\n    volumeButton = (\n      <button type=\"button\" className=\"volume-button\" onClick={handleMute}>\n        <i className=\"fas fa-volume-up active\" />\n      </button>\n    );\n  }\n\n  return (\n    <>\n      {volumeButton}\n    </>\n  );\n};\n\nVolumeSlider.propTypes = {\n  volume: number.isRequired,\n  preMuteVolume: number.isRequired,\n  handleMute: func.isRequired,\n  handleUnmute: func.isRequired,\n  handleVolume: func.isRequired,\n};\n\nexport default VolumeSlider;\n","import React from 'react';\nimport { func, bool } from 'prop-types';\n\nconst LoopButton = (props) => {\n  const { isOnLoop, toggleLoop } = props;\n\n  return (\n    <button type=\"button\" onClick={toggleLoop(isOnLoop)}>\n      <i className={`fas fa-redo-alt ${isOnLoop && 'active'}`} />\n    </button>\n  );\n};\n\nLoopButton.propTypes = {\n  isOnLoop: bool.isRequired,\n  toggleLoop: func.isRequired,\n};\n\nexport default LoopButton;\n","import React from 'react';\nimport { string, func, bool } from 'prop-types';\n\nimport eventHandlers from './event_handlers/event_handlers';\n\nimport Audio from './audio_player_components/audio';\nimport SpinningDisc from './audio_player_components/spinning_disc';\nimport Marquee from './audio_player_components/marquee';\nimport PlayPauseButton from './audio_player_components/play_pause_button';\nimport ForwardButton from './audio_player_components/forward_button';\nimport ShuffleButton from './audio_player_components/shuffle_button';\nimport BackwardButton from './audio_player_components/backward_button';\nimport SeekSlider from './audio_player_components/seek_slider';\nimport VolumeSlider from './audio_player_components/volume_slider';\nimport LoopButton from './audio_player_components/loop_button';\n\nclass AudioPlayer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isPlaying: false,\n      isOnLoop: false,\n      isOnShuffle: false,\n      seekValue: 0,\n      totalAudioTime: '0:00',\n      currentAudioTime: '0:00',\n      volume: 50,\n      preMuteVolume: 50,\n    };\n\n    this.audioRef = React.createRef();\n\n    this.getTotalAudioTime = eventHandlers.getTotalAudioTime.bind(this);\n    this.updateCurrentAudioTime = eventHandlers.updateCurrentAudioTime.bind(this);\n    this.handleSeek = eventHandlers.handleSeek.bind(this);\n    this.handlePlay = eventHandlers.handlePlay.bind(this);\n    this.handlePause = eventHandlers.handlePause.bind(this);\n    this.playAudio = eventHandlers.playAudio.bind(this);\n    this.pauseAudio = eventHandlers.pauseAudio.bind(this);\n    this.handleVolume = eventHandlers.handleVolume.bind(this);\n    this.handleMute = eventHandlers.handleMute.bind(this);\n    this.handleUnmute = eventHandlers.handleUnmute.bind(this);\n    this.updateVolume = eventHandlers.updateVolume.bind(this);\n    this.toggleShuffle = eventHandlers.toggleShuffle.bind(this);\n    this.toggleLoop = eventHandlers.toggleLoop.bind(this);\n  }\n\n  render() {\n    const {\n      title,\n      url,\n      artist,\n      artistAvatar,\n      album,\n      coverImage,\n      isEndOfLoop,\n      forward,\n      backward,\n      shuffle,\n    } = this.props;\n\n    const {\n      isPlaying,\n      isOnLoop,\n      isOnShuffle,\n      volume,\n      preMuteVolume,\n      seekValue,\n      currentAudioTime,\n      totalAudioTime,\n    } = this.state;\n\n    return (\n      <>\n        <Audio\n          audioRef={this.audioRef}\n          url={url}\n          forward={forward}\n          shuffle={shuffle}\n          isPlaying={isPlaying}\n          isEndOfLoop={isEndOfLoop}\n          isOnLoop={isOnLoop}\n          isOnShuffle={isOnShuffle}\n          getTotalAudioTime={this.getTotalAudioTime}\n          updateCurrentAudioTime={this.updateCurrentAudioTime}\n          updateVolume={this.updateVolume}\n          handlePause={this.handlePause}\n          handlePlay={this.handlePlay}\n          playAudio={this.playAudio}\n        />\n\n\n        <div className=\"AudioPlayerContainer\">\n          <SpinningDisc album={album} coverImage={coverImage} />\n\n          <Marquee title={title} artist={artist} artistAvatar={artistAvatar} />\n\n          <div className=\"Controls1\">\n            <BackwardButton\n              backward={backward}\n              playAudio={this.playAudio}\n            />\n            <PlayPauseButton\n              isPlaying={isPlaying}\n              playAudio={this.playAudio}\n              pauseAudio={this.pauseAudio}\n            />\n            <ForwardButton\n              forward={forward}\n              playAudio={this.playAudio}\n            />\n          </div>\n\n          <div className=\"Controls2\">\n            <ShuffleButton\n              isOnShuffle={isOnShuffle}\n              toggleShuffle={this.toggleShuffle}\n            />\n            <LoopButton\n              isEndOfLoop={isEndOfLoop}\n              isOnLoop={isOnLoop}\n              toggleLoop={this.toggleLoop}\n            />\n            <VolumeSlider\n              volume={volume}\n              preMuteVolume={preMuteVolume}\n              handleMute={this.handleMute}\n              handleUnmute={this.handleUnmute}\n              handleVolume={this.handleVolume}\n            />\n          </div>\n\n          <SeekSlider\n            seekValue={seekValue}\n            currentAudioTime={currentAudioTime}\n            totalAudioTime={totalAudioTime}\n            handleSeek={this.handleSeek}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nAudioPlayer.propTypes = {\n  title: string.isRequired,\n  url: string.isRequired,\n  artist: string.isRequired,\n  artistAvatar: string.isRequired,\n  album: string.isRequired,\n  coverImage: string.isRequired,\n  isEndOfLoop: bool.isRequired,\n  forward: func.isRequired,\n  backward: func.isRequired,\n  shuffle: func.isRequired,\n};\n\nexport default AudioPlayer;\n","import { connect } from 'react-redux';\n\nimport { getCurrentSongInfo, isEndOfLoop } from '../../selectors/audio_player_selectors';\nimport { forward, backward, shuffle } from '../../actions/audio_player_actions';\n\nimport AudioPlayer from './audio_player';\n\nconst mapStateToProps = state => ({\n  ...getCurrentSongInfo(state),\n  isEndOfLoop: isEndOfLoop(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  forward: () => dispatch(forward()),\n  backward: () => dispatch(backward()),\n  shuffle: () => dispatch(shuffle()),\n});\n\nconst AudioPlayerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AudioPlayer);\n\nexport default AudioPlayerContainer;\n","import React from 'react';\n\nconst SoundWave = () => (\n  <span className=\"playlist-item__sound-wave\">\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n    <span className=\"sound-wave__wave\" />\n  </span>\n);\n\nexport default SoundWave;\n","import React from 'react';\nimport { string, bool, number } from 'prop-types';\nimport SoundWave from './soundwave';\n\nconst PlaylistIndexItem = (props) => {\n  const {\n    id,\n    title,\n    artist,\n    album,\n    isPlaying,\n    handleRemoveSong,\n  } = props;\n\n  return (\n    <>\n      <div className=\"playlist-item__inner-wrapper\">\n        {isPlaying ? <SoundWave /> : null}\n        <span>\n          <h4 className=\"playlist-item__title\">{title}</h4>\n        </span>\n\n        <button\n          className=\"playlist-item__X\"\n          type=\"button\"\n          onClick={handleRemoveSong(id)}\n        >\n          <h6>remove</h6>\n        </button>\n      </div>\n\n      <h5>{`${artist} - ${album}`}</h5>\n    </>\n  );\n};\n\nPlaylistIndexItem.propTypes = {\n  id: number.isRequired,\n  title: string.isRequired,\n  artist: string.isRequired,\n  album: string.isRequired,\n  isPlaying: bool.isRequired,\n};\n\nexport default PlaylistIndexItem;\n","import React from 'react';\nimport { string, number, arrayOf, func } from 'prop-types';\n\nclass PlaylistForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newName: `${props.playlistName || ''}`,\n    };\n\n    this.handleNew = this.handleNew.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { playlistName } = nextProps;\n    this.setState({ newName: `${playlistName || ''}` });\n  }\n\n  makePlaylistData() {\n    const { newName } = this.state;\n    const { userId, songIds } = this.props;\n\n    return {\n      playlist: {\n        name: newName || new Date().toLocaleString(),\n        user_id: userId,\n        song_ids: songIds,\n      },\n    };\n  }\n\n  handleNew() {\n    const { createPlaylist } = this.props;\n    createPlaylist(this.makePlaylistData());\n  }\n\n  handleEdit() {\n    const { playlistId, editPlaylist } = this.props;\n    editPlaylist(playlistId, this.makePlaylistData());\n  }\n\n  handleChange(e) {\n    this.setState({\n      newName: e.target.value,\n    });\n  }\n\n  render() {\n    const { playlistName, userId } = this.props;\n    const { newName } = this.state;\n\n    if (!userId) return null;\n\n    return (\n      <form className=\"Input-Form\" onSubmit={e => e.preventDefault()}>\n        <input\n          className=\"Input-Form__Input\"\n          type=\"text\"\n          placeholder=\"Name this playlist...\"\n          value={newName}\n          onChange={this.handleChange}\n        />\n\n        <div className=\"Input-Form__Buttons\">\n          {playlistName\n            ? (\n              <button type=\"button\" onClick={this.handleEdit}>\n                <h6>Save</h6>\n              </button>\n            ) : null}\n\n          <button type=\"button\" onClick={this.handleNew}>\n            <h6>Create New</h6>\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nPlaylistForm.defaultProps = {\n  userId: null,\n  playlistId: undefined,\n  playlistName: undefined,\n};\n\nPlaylistForm.propTypes = {\n  userId: number,\n  songIds: arrayOf(number).isRequired,\n  playlistId: number,\n  playlistName: string,\n  createPlaylist: func.isRequired,\n  editPlaylist: func.isRequired,\n};\n\nexport default PlaylistForm;\n","import { connect } from 'react-redux';\n\nimport { createPlaylist, editPlaylist } from '../../actions/user_playlist_actions';\nimport { getPlaylistId, getPlaylistName } from '../../selectors/playlist_selectors';\n\nimport PlaylistFrom from './playlist_form';\n\nconst mapStateToProps = (state) => {\n  const playlistId = getPlaylistId(state);\n  const playlistName = getPlaylistName(state, playlistId);\n\n  return {\n    userId: state.session.user.userId,\n    playlistId,\n    playlistName,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  createPlaylist: songIds => dispatch(createPlaylist(songIds)),\n  editPlaylist: (playlistId, playlistData) => dispatch(editPlaylist(playlistId, playlistData)),\n});\n\nconst PlaylistFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlaylistFrom);\n\nexport default PlaylistFormContainer;\n","export const getPlaylistId = ({ session }) => session.audioPlayer.currentPlaylist;\n\nexport const getPlaylistName = ({ entities }, playlistId) => {\n  let playlistName;\n  try {\n    playlistName = entities.userPlaylists[playlistId].name;\n  } catch (err) {\n    playlistName = undefined;\n  }\n\n  return playlistName;\n};\n","import React from 'react';\nimport { shape, arrayOf, number, string, func } from 'prop-types';\n\nimport PlaylistIndexItem from './playlist_index_item';\nimport PlaylistFormContainer from '../playlist_form/playlist_form_container';\n\nclass PlaylistIndex extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeSong = this.handleChangeSong.bind(this);\n    this.handleRemoveSong = this.handleRemoveSong.bind(this);\n  }\n\n  handleChangeSong(id) {\n    const { changeSong } = this.props;\n    return (e) => {\n      e.stopPropagation();\n      changeSong(id);\n    };\n  }\n\n  handleRemoveSong(id) {\n    const { removeSong } = this.props;\n    return (e) => {\n      e.stopPropagation();\n      removeSong(id);\n    };\n  }\n\n  render() {\n    const { songs, playingSongId } = this.props;\n\n    return (\n      <>\n        <PlaylistFormContainer songIds={songs.map(song => song.id)} />\n\n        <ul className=\"Col-List\">\n\n          {songs.map(song => (\n            <li\n              className={`\n              Col-List__Item playlist-item \n              ${song.id === playingSongId ? 'playlist-item--playing' : ''}\n            `}\n              key={song.id}\n              role=\"presentation\"\n              onClick={this.handleChangeSong(song.id)}\n            >\n              <PlaylistIndexItem\n                {...song}\n                isPlaying={song.id === playingSongId}\n                handleRemoveSong={this.handleRemoveSong}\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nPlaylistIndex.propTypes = {\n  playingSongId: number.isRequired,\n  changeSong: func.isRequired,\n  songs: arrayOf(shape({\n    id: number,\n    title: string,\n    url: string,\n    artist: string,\n    artistAvatar: string,\n    album: string,\n    coverImage: string,\n  })).isRequired,\n};\n\nexport default PlaylistIndex;\n","import { connect } from 'react-redux';\n\nimport { getPlaylistSongsInfo, getPlayingSongId } from '../../selectors/song_selectors';\nimport PlaylistIndex from './playlist_index';\nimport { changeSong, removeSong } from '../../actions/audio_player_actions';\n\nconst mapStateToProps = state => ({\n  songs: getPlaylistSongsInfo(state),\n  playingSongId: getPlayingSongId(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeSong: songId => dispatch(changeSong(songId)),\n  removeSong: songId => dispatch(removeSong(songId)),\n});\n\nconst PlaylistIndexContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlaylistIndex);\n\nexport default PlaylistIndexContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { func, oneOf, string, arrayOf } from 'prop-types';\n\nclass SessionForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      password: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDemoLogin = this.handleDemoLogin.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { clearSessionErrors, errors } = this.props;\n    if (errors.length !== 0) clearSessionErrors();\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.target.value });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { processForm } = this.props;\n    const { username, password } = this.state;\n\n    const userData = { user: { username, password } };\n    processForm(userData);\n\n    this.setState({\n      username: '',\n      password: '',\n    });\n  }\n\n  handleDemoLogin(e) {\n    e.preventDefault();\n    const { processForm } = this.props;\n\n    processForm({\n      user: {\n        username: 'guest',\n        password: 'password',\n      },\n    });\n  }\n\n  render() {\n    const { formType, errors } = this.props;\n    const { username, password } = this.state;\n\n    return (\n      <form className=\"session-form\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"session-form__input\"\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={this.update('username')}\n        />\n        <br />\n        <input\n          className=\"session-form__input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={this.update('password')}\n        />\n\n        <ul className=\"session-form__errors\">\n          {errors.map((error, i) => (\n            <li key={i}>{error}</li>\n          ))}\n        </ul>\n        <br />\n\n        <button className=\"session-form__button\" type=\"submit\">{formType}</button>\n        <button className=\"session-form__button\" type=\"submit\" onClick={this.handleDemoLogin}>DEMO</button>\n\n        {formType === 'LOG IN'\n          ? (\n            <p className=\"session-form__text\">\n              {'Don\\'t have an account? '}\n              <Link className=\"session-form__link\" to=\"/profile/signup\">Signup</Link>\n            </p>\n          ) : (\n            <p className=\"session-form__text\">\n              {'Already have an account? '}\n              <Link className=\"session-form__link\" to=\"/profile/login\">Login</Link>\n            </p>\n          )}\n      </form>\n    );\n  }\n}\n\nSessionForm.propTypes = {\n  formType: oneOf(['LOG IN', 'SIGN UP']).isRequired,\n  errors: arrayOf(string).isRequired,\n  processForm: func.isRequired,\n  clearSessionErrors: func.isRequired,\n};\n\nexport default SessionForm;\n","import { connect } from 'react-redux';\n\nimport { login, clearSessionErrors } from '../../actions/session_actions';\nimport SessionForm from './session_form';\n\nconst mapStateToProps = ({ errors }) => ({\n  errors: errors.session,\n  formType: 'LOG IN',\n});\n\nconst mapDispatchToProps = dispatch => ({\n  processForm: user => dispatch(login(user)),\n  clearSessionErrors: () => dispatch(clearSessionErrors()),\n});\n\nconst LoginFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SessionForm);\n\nexport default LoginFormContainer;\n","import { connect } from 'react-redux';\n\nimport { signup, clearSessionErrors } from '../../actions/session_actions';\nimport SessionForm from './session_form';\n\nconst mapStateToProps = ({ errors }) => ({\n  errors: errors.session,\n  formType: 'SIGN UP',\n});\n\nconst mapDispatchToProps = dispatch => ({\n  processForm: user => dispatch(signup(user)),\n  clearSessionErrors: () => dispatch(clearSessionErrors()),\n});\n\nconst SignupFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SessionForm);\n\nexport default SignupFormContainer;\n","import React from 'react';\nimport LoadIcon from '../utils/loading_icon';\n\nconst About = () => (\n  <LoadIcon loading />\n);\n\nexport default About;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nconst TextAlert = ({ text }) => (\n  <h4 className=\"modal__child__text\">\n    {text}\n  </h4>\n);\n\nTextAlert.propTypes = {\n  text: string.isRequired,\n};\n\nexport default TextAlert;\n","import React from 'react';\nimport { func, shape, string } from 'prop-types';\nimport TextAlert from './text_alert';\n\nclass Modal extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { modal, closeModal } = this.props;\n\n    if (this.closeModalTimeout) {\n      clearTimeout(this.closeModalTimeout);\n    }\n    if (modal.type !== 'hidden') {\n      this.closeModalTimeout = setTimeout(() => closeModal(), 2000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.closeModalTimeout) clearTimeout(this.closeModalTimeout);\n  }\n\n  handleClick() {\n    const { closeModal } = this.props;\n    if (this.closeModalTimeout) clearTimeout(this.closeModalTimeout);\n    closeModal();\n  }\n\n  renderComponent() {\n    const { modal } = this.props;\n\n    let component;\n    switch (modal.type) {\n      case 'TEXT_ALERT': {\n        component = <TextAlert text={modal.content} />;\n        return component;\n      }\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { modal } = this.props;\n\n    return (\n      <div\n        className=\"Main modal__background\"\n        role=\"presentation\"\n      >\n        <div\n          className={`modal__child modal__child--${modal.type}`}\n          role=\"presentation\"\n          onClick={this.handleClick}\n        >\n          {this.renderComponent()}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  modal: shape({\n    type: string,\n    content: string,\n  }).isRequired,\n  closeModal: func.isRequired,\n};\n\nexport default Modal;\n","import { connect } from 'react-redux';\n\nimport { closeModal } from '../../actions/modal_actions';\nimport Modal from './modal';\n\nconst mapStateToProps = ({ ui: { modal } }) => ({\n  modal,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  closeModal: () => dispatch(closeModal()),\n});\n\nconst ModalContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Modal);\n\nexport default ModalContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport { bool } from 'prop-types';\nimport { AuthRoute, ProtectedRoute } from '../utils/route_utils';\n\nimport RootPage from './root_page/root_page_container';\nimport NavBar from './nav/nav_bar';\nimport SearchIndexContainer from './search_index/search_index_container';\nimport SongIndexContainer from './song_index/song_index_container';\nimport UserPlaylistContainer from './user_playlist/user_playlist_index_container';\nimport AudioPlayerContainer from './audio_player/audio_player_container';\nimport PlaylistIndexContainer from './playlist_index/playlist_index_container';\nimport LoginFormContainer from './session_form/login_form_container';\nimport SignupFormContainer from './session_form/signup_form_container';\nimport About from './about/about';\nimport ModalContainer from './modal/modal_container';\n\nconst App = (props) => {\n  const { isLoggedIn } = props;\n\n  return (\n    <div className={`Site ${isLoggedIn && 'Site-LoggedIn'}`}>\n      <NavBar />\n\n      <ModalContainer />\n\n      <div className=\"Main\">\n        <Switch>\n          <ProtectedRoute path=\"/playlist/:playlistId\" component={PlaylistIndexContainer} />\n          <Route path=\"/playlist\" component={PlaylistIndexContainer} />\n\n          <Route path=\"/home\" component={SongIndexContainer} />\n          <Route path=\"/search\" component={SearchIndexContainer} />\n          <Route path=\"/about\" component={About} />\n\n          <AuthRoute path=\"/profile/login\" component={LoginFormContainer} />\n          <AuthRoute path=\"/profile/signup\" component={SignupFormContainer} />\n          <ProtectedRoute path=\"/profile\" component={UserPlaylistContainer} />\n\n          <Redirect to=\"/home\" />\n        </Switch>\n\n      </div>\n\n      <aside className=\"Aside\">\n        <Route path=\"/\" component={RootPage} />\n        <Route path=\"/\" component={AudioPlayerContainer} />\n      </aside>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  isLoggedIn: bool.isRequired,\n};\n\nconst mapStateToProps = ({ session }) => ({ isLoggedIn: Boolean(session.user.userId) });\n\nexport default withRouter(connect(mapStateToProps, null)(App));\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { element } from 'prop-types';\n\nclass ErrorHandler extends React.Component {\n  constructor() {\n    super();\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    const { children } = this.props;\n    return children;\n  }\n}\n\nErrorHandler.propTypes = {\n  children: element.isRequired,\n};\n\nexport default ErrorHandler;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { instanceOf } from 'prop-types';\n\nimport App from './app';\nimport ErrorHandler from './error_handler';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <ErrorHandler>\n        <App />\n      </ErrorHandler>\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;\n\nRoot.propTypes = {\n  store: instanceOf(Object).isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/store';\nimport Root from './components/root';\n\nimport 'normalize.css';\nimport './assets/css/index.scss';\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const root = document.getElementById('root');\n\n  let store;\n\n  if (sessionStorage.getItem('userId')) {\n    const preloadedState = {\n      session: {\n        user: {\n          userId: parseInt(sessionStorage.getItem('userId'), 10),\n          username: sessionStorage.getItem('username'),\n        },\n      },\n    };\n    store = configureStore(preloadedState);\n  } else {\n    store = configureStore();\n  }\n\n  ReactDOM.render(\n    <Root store={store} />,\n    root,\n  );\n});\n"],"sourceRoot":""}